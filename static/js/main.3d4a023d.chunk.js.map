{"version":3,"sources":["audio/CSynth.js","redux/subscriptions.js","util/notes-util.js","redux/reducers/synth1UIReducer.js","components/util/Dial.jsx","components/piano-roll/Cell.jsx","components/piano-roll/CellRow.jsx","components/piano-roll/PianoRoll.jsx","components/Synth1/Synth1.jsx","redux/reducers/utilReducer.js","redux/store.js","socket/socketEmitter.js","components/App.jsx","index.js"],"names":["CSynth","bpm","numSteps","_loopCallback","time","_onTick","step","nextChord","_nextNotes","map","note","frequencyOffset","length","synth","triggerAttackRelease","addNote","index","freq","chord","chords","includes","push","removeNote","filter","value","triggerAttack","frequency","triggerRelease","setAmpAttack","ratio","set","envelope","attack","setAmpDecay","decay","setAmpSustain","sustain","setAmpRelease","release","setFilterAttack","filterEnvelope","setFilterDecay","setFilterSustain","setFilterRelease","setFilterBase","baseFrequency","setFilterRange","octaves","setFilterQ","Q","start","Tone","context","resume","loop","stop","Transport","this","PolySynth","MonoSynth","toMaster","oscillator","type","Array","fill","v","Loop","onTick","Draw","schedule","subscribe","store","path","callback","watch","getState","isBlack","color","notes","startNote","endNote","_","i","noteNumber","Frequency","name","toNote","toFrequency","console","error","generateNotes","initialComposition","active","synth1UISlice","createSlice","initialState","amp","base","range","q","composition","numNotes","reducers","setAmp","state","action","Object","entries","payload","key","setFilter","setCompositionCell","row","col","actions","memo","onChange","children","className","radius","strokeWidth","r","mapDispatchToProps","connect","cell","useSelector","synth1UI","black","join","handleClick","useCallback","onClick","CellRow","cells","colIndex","activeColumn","n","rowI","frequencyOffsetValues","String","mapDispatch","useSetCallback","attr","isPlaying","useStore","useState","setFrequencyOffset","currentStep","setCurrentStep","useRef","useEffect","rowi","coli","raw","log","subscribeCSynth","current","handleClickFrequencyOffset","e","Number","currentTarget","id","checked","utilSlice","message","setMessage","makeStore","middleware","configureStore","reducer","synth1UIReducer","util","utilReducer","getDefaultMiddleware","socket","io","transports","next","result","origin","emit","on","dispatch","createEmitter","emitter","setupListener","App","setPlaying","audioContextStarted","setAudioContextStarted","startAudioContext","then","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d4a023d.chunk.js","sourcesContent":["import Tone from 'tone';\n\nexport default class CSynth {\n  constructor({ bpm, numSteps }) {\n    // this.loop.humanize = true;\n    Tone.Transport.bpm.value = bpm;\n    Tone.Transport.start();\n\n    this.synth = new Tone.PolySynth(6, Tone.MonoSynth).toMaster();\n    this.synth.set({\n      oscillator: {\n        type: 'sawtooth'\n      },\n    });\n    this.chords = new Array(numSteps)\n      .fill(null).map(v => []);\n    this.step = 0;\n    this.frequencyOffset = 0;\n    this.loop = new Tone.Loop(this._loopCallback, '16n')\n  }\n\n  _loopCallback = (time) => {\n    this._onTick(time, this.step);\n    const nextChord = this._nextNotes().map(note => note + this.frequencyOffset * 10);\n    nextChord.length > 0 &&\n      this.synth.triggerAttackRelease(nextChord, '16n', time);\n  }\n\n  _onTick(time, step) {\n    if (!this.onTick) return;\n    Tone.Draw.schedule(() => {\n      this.onTick(step);\n    }, time + 0.1)\n  }\n\n  _nextNotes() {\n    let nextChord = this.chords[this.step] || [];\n    this.step++;\n    if (this.step >= this.chords.length) this.step = 0;\n    return nextChord;\n  }\n\n  addNote = ({ index, freq }) => {\n    const chord = this.chords[index];\n    if (!chord.includes(freq)) {\n      chord.push(freq);\n    }\n  }\n\n  removeNote = ({ index, freq }) => {\n    this.chords[index] = this.chords[index].filter(value => value !== freq);\n  }\n\n  triggerAttack = (frequency) => {\n    this.synth.triggerAttack(frequency);\n  }\n\n  triggerRelease = (frequency) => {\n    this.synth.triggerRelease(frequency);\n  }\n\n  setAmpAttack = (ratio) => {\n    this.synth.set({\n      envelope: {\n        attack: ratio + 0.01\n      }\n    });\n  }\n\n  setAmpDecay = (ratio) => {\n    this.synth.set({\n      envelope: {\n        decay: ratio + 0.01\n      }\n    });\n  }\n\n  setAmpSustain = (ratio) => {\n    this.synth.set({\n      envelope: {\n        sustain: ratio\n      }\n    });\n  }\n\n  setAmpRelease = (ratio) => {\n    this.synth.set({\n      envelope: {\n        release: (ratio * 10) + 0.01\n      }\n    });\n  }\n\n  setFilterAttack = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        attack: (ratio / 5) + 0.01\n      }\n    });\n  }\n\n  setFilterDecay = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        decay: ratio + 0.01\n      }\n    });\n  }\n\n  setFilterSustain = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        sustain: ratio\n      }\n    });\n  }\n\n  setFilterRelease = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        release: (ratio * 100) + 0.01\n      }\n    });\n  }\n\n  setFilterBase = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        baseFrequency: (ratio * 500) + 1\n      }\n    });\n  }\n\n  setFilterRange = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        octaves: ratio * 20\n      }\n    });\n  }\n\n  setFilterQ = (ratio) => {\n    this.synth.set({\n      filter: {\n        Q: ratio * 10\n      }\n    })\n  }\n\n  start = () => {\n    Tone.context.resume();\n    // Tone.Transport.start();\n    this.loop.start();\n  }\n\n  stop = () => {\n    // Tone.Transport.stop();\n    this.loop.stop();\n    this.step = 0;\n  }\n}","// import store from './store';\nimport watch from 'redux-watch';\nimport { get } from 'object-path';\n\n// use redux-watch to subscribe to a certain store value\n// and use the callback to set the initial value\nconst subscribe = (store, path, callback) => {\n  store.subscribe(watch(store.getState, path)(callback));\n  // callback(get(store.getState(), path));\n}\n\nexport function subscribeCSynth(store, synth) {\n  subscribe(store, 'synth1UI.amp.attack', synth.setAmpAttack);\n  subscribe(store, 'synth1UI.amp.decay', synth.setAmpDecay);\n  subscribe(store, 'synth1UI.amp.sustain', synth.setAmpSustain);\n  subscribe(store, 'synth1UI.amp.release', synth.setAmpRelease);\n\n  subscribe(store, 'synth1UI.filter.attack', synth.setFilterAttack);\n  subscribe(store, 'synth1UI.filter.decay', synth.setFilterDecay);\n  subscribe(store, 'synth1UI.filter.sustain', synth.setFilterSustain);\n  subscribe(store, 'synth1UI.filter.release', synth.setFilterRelease);\n  subscribe(store, 'synth1UI.filter.base', synth.setFilterBase);\n  subscribe(store, 'synth1UI.filter.range', synth.setFilterRange);\n  subscribe(store, 'synth1UI.filter.q', synth.setFilterQ);\n\n  const { composition } = store.getState().synth1UI;\n  for (const [rowi, row] of composition.entries()) {\n    for (const [coli, cell] of row.entries()) {\n      const path = String.raw`synth1UI.composition.${rowi}.${coli}.active`;\n      subscribe(store, path, active => {\n        console.log(`${cell.note.name} changed to ${active}`)\n        if (active) {\n          synth.addNote({index: coli, freq: cell.note.frequency});\n        } else {\n          synth.removeNote({index: coli, freq: cell.note.frequency});\n        }\n      });\n    }\n  }\n}","import Tone from 'tone';\n\n// helper functions\nexport function isBlack(note) {\n  return note.color === 'black';\n}\n\nexport function isWhite(note) {\n  return note.color === 'white'\n}\n\nexport function generateNotes(startNote = 0, endNote = 127) {\n  if (startNote < 0 || endNote > 127) {\n    console.error('note out of range');\n    return;\n  }\n\n  let notes = new Array(endNote - startNote).fill(0).map((_, i) => i + startNote);\n  notes = notes.map(noteNumber => {\n    const freq = Tone.Frequency(noteNumber, 'midi');\n    const name = freq.toNote();\n    return {\n      name,\n      frequency: freq.toFrequency(),\n      color: name.includes('#') ? 'black' : 'white',\n    }\n  });\n  return notes;\n}","import { createSlice } from 'redux-starter-kit';\nimport { generateNotes } from '../../util/notes-util'\n\n\nconst numNotes = 24;\nconst numSteps = 8;\nconst startNote = 36;\nconst notes = generateNotes(startNote, startNote + numNotes);\n\nconst initialComposition =\n  new Array(numNotes)\n    .fill(null)\n    .map((_, i) => new Array(numSteps).fill(null)\n      .map(() => ({\n        active: false,\n        note: notes[i],\n      }))\n    );\n\nconst synth1UISlice = createSlice({\n  initialState: {\n    amp: {\n      attack: 0,\n      decay: 0.5,\n      sustain: 1,\n      release: 0.2\n    },\n    filter: {\n      attack: 0,\n      decay: 0.5,\n      sustain: 1,\n      release: 0.2,\n      base: 0,\n      range: 0.5,\n      q: 0,\n    },\n    composition: initialComposition,\n    numNotes,\n    numSteps,\n    startNote,\n    notes\n  },\n  reducers: {\n    setAmp(state, action) {\n      // allow for setting arbitrary values\n      for (let [key, value] of Object.entries(action.payload)) {\n        state.amp[key] = value;\n      }\n    },\n    setFilter(state, action) {\n      // allow for setting arbitrary values\n      for (let [key, value] of Object.entries(action.payload)) {\n        state.filter[key] = value;\n      }\n    },\n    setCompositionCell(state, action) {\n      const { row, col, active } = action.payload;\n      state.composition[row][col].active = active;\n    }\n  }\n});\n\nexport const { setAmp, setFilter, setCompositionCell } = synth1UISlice.actions;\nexport default synth1UISlice.reducer;","import React, {memo} from 'react';\n\nimport {\n  CircularInput,\n  CircularTrack,\n  CircularProgress,\n  CircularThumb,\n} from 'react-circular-input'\n\nconst Dial = ({ value, onChange, children }) => {\n\n  return (\n    <div className='knob'>\n      <CircularInput radius={28}\n        value={value}\n        onChange={onChange}>\n        <CircularTrack strokeWidth={14} />\n        <CircularProgress strokeWidth={14} />\n        <CircularThumb r='8' />\n      </CircularInput>\n      {children}\n    </div>\n  );\n}\n\nexport default memo(Dial);","import React, { useCallback } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { setCompositionCell } from '../../redux/reducers/synth1UIReducer';\nimport { isBlack } from '../../util/notes-util';\n\nconst mapDispatchToProps = {\n  setCompositionCell\n}\n\nconst Cell = ({ row, col, setCompositionCell }) => {\n\n  const cell = useSelector(state => state.synth1UI.composition[row][col]);\n  const black = isBlack(cell.note);\n  const { active } = cell;\n\n  const className = ['piano-cell',\n    black ? 'black' : 'white',\n    active ? 'active' : 'inactive'\n  ].join(' ');\n\n  const handleClick = useCallback(() => {\n    setCompositionCell({ row, col, active: !active })\n  }, [setCompositionCell, row, col, active]);\n\n  return (\n    <span className={className} onClick={handleClick} />\n  );\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Cell);","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Cell from './Cell';\n\nconst CellRow = ({ row, black }) => {\n\n  const className = black ? 'black' : 'white';\n\n  const cells = useSelector(state => state.synth1UI.composition[row]);\n\n  return (\n    <section className={`step-row ${className}`}>\n      <div className='steps-row'>\n        {cells.map((cell, colIndex) => (\n          <Cell \n            key={`${row}, ${colIndex}`}\n            row={row}\n            col={colIndex}\n          />\n        ))}\n      </div>\n    </section>\n  );\n}\n\n\n\nexport default CellRow;","import React from 'react';\nimport CellRow from './CellRow';\nimport { isBlack } from '../../util/notes-util';\nimport { setCompositionCell } from '../../redux/reducers/synth1UIReducer';\nimport {connect} from 'react-redux';\nimport './piano-roll.css';\n\nconst mapStateToProps = state => ({\n  notes: state.synth1UI.notes,\n  composition: state.synth1UI.composition,\n});\n\nconst mapDispatchToProps = {\n  setCompositionCell\n}\n\nconst PianoRoll = ({ setCompositionCell, activeColumn, notes}) => {\n\n  return (\n    <div className='piano-roll'>\n      <section className='piano-roll-keys'>\n        {notes.map((n) => {\n          const className = ['piano-key', isBlack(n) ? 'black' : 'white'].join(' ');\n          return (\n            <div\n              className={className}\n              key={n.name}>\n              <p>{n.name}</p>\n            </div>\n          );\n        })}\n      </section>\n      <section className='piano-roll-editor'>\n        {notes.map((n, rowI) => (\n          <CellRow\n            row={rowI}\n            black={isBlack(n)}\n            key={rowI} />\n        ))}\n      </section>\n    </div>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PianoRoll);","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { connect, useStore } from 'react-redux';\nimport CSynth from '../../audio/CSynth';\nimport { subscribeCSynth } from '../../redux/subscriptions';\nimport { setAmp, setFilter }from '../../redux/reducers/synth1UIReducer';\nimport Dial from '../util/Dial';\nimport PianoRoll from '../piano-roll/PianoRoll';\n\nconst tickTime = 170;\n\nconst frequencyOffsetValues = new Array(7).fill(null).map((_, i) => String(i - 3));\n\nconst mapDispatch = {\n  setAmp,\n  setFilter,\n};\n\nconst mapStateToProps = state => ({\n  amp: state.synth1UI.amp,\n  filter: state.synth1UI.filter,\n  numSteps: state.synth1UI.numSteps,\n});\n\nconst useSetCallback = (set, attr) => {\n  return useCallback(v => set({ [attr]: v }), [set, attr]);\n}\n\nconst Synth1 = ({ isPlaying, setAmp, setFilter, amp, filter, numSteps }) => {\n\n  const store = useStore();\n\n  const [frequencyOffset, setFrequencyOffset] = useState('0');\n  const [currentStep, setCurrentStep] = useState(0);\n\n  const synth = useRef(new CSynth({bpm: tickTime, numSteps}));\n\n  // runs once on first render\n  useEffect(() => {\n    subscribeCSynth(store, synth.current);\n    synth.current.onTick = step => {\n      setCurrentStep(step);\n    }\n  }, [store]);\n\n  useEffect(() => {\n    if (!synth.current) return;\n    isPlaying ? synth.current.start() : synth.current.stop();\n  }, [isPlaying, synth])\n\n  const handleClickFrequencyOffset = e => {\n    synth.current.frequencyOffset = Number(e.currentTarget.value);\n    setFrequencyOffset(e.currentTarget.value);\n  }\n\n  // actual render code\n  return (\n    <div className='App'>\n      <section id='amp-env'>\n        <h2>Amp Env</h2>\n        <div className='knob-row'>\n          <Dial\n            value={amp.attack}\n            onChange={useSetCallback(setAmp, 'attack')} >\n            Attack\n          </Dial>\n          <Dial\n            value={amp.decay}\n            onChange={useSetCallback(setAmp, 'decay')} >\n            Decay\n          </Dial>\n          <Dial\n            value={amp.sustain}\n            onChange={useSetCallback(setAmp, 'sustain')} >\n            Sustain\n          </Dial>\n          <Dial\n            value={amp.release}\n            onChange={useSetCallback(setAmp, 'release')} >\n            Release\n          </Dial>\n        </div>\n      </section>\n      <section id='filter-env'>\n        <h2>Filter</h2>\n        <div className='knob-row'>\n          <Dial\n            value={filter.attack}\n            onChange={useSetCallback(setFilter, 'attack')} >\n            Attack\n          </Dial>\n          <Dial\n            value={filter.decay}\n            onChange={useSetCallback(setFilter, 'decay')} >\n            Decay\n          </Dial>\n          <Dial\n            value={filter.sustain}\n            onChange={useSetCallback(setFilter, 'sustain')} >\n            Sustain\n          </Dial>\n          <Dial\n            value={filter.release}\n            onChange={useSetCallback(setFilter, 'release')} >\n            Release\n          </Dial>\n          <Dial\n            value={filter.base}\n            onChange={useSetCallback(setFilter, 'base')} >\n            Base\n          </Dial>\n          <Dial\n            value={filter.range}\n            onChange={useSetCallback(setFilter, 'range')} >\n            Range\n          </Dial>\n          <Dial\n            value={filter.q}\n            onChange={useSetCallback(setFilter, 'q')} >\n            Q\n          </Dial>\n        </div>\n      </section>\n      <form id='frequency-offset'>\n        <h3>Frequency Offset</h3>\n        <div>\n          {\n            frequencyOffsetValues.map(value => {\n              return <input type='radio'\n                name='frequency-offset'\n                value={value}\n                key={value}\n                checked={frequencyOffset === value}\n                onChange={handleClickFrequencyOffset}\n              />\n            })\n          }\n        </div>\n      </form>\n      <PianoRoll currentStep={currentStep} />\n    </div>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatch\n)(Synth1);\n","import { createSlice } from 'redux-starter-kit';\n\nconst utilSlice = createSlice({\n  initialState: {\n    message: 'Hello, World'\n  },\n  reducers: {\n    setMessage(state, action) {\n      console.log('change to ', action.payload);\n      state.message = action.payload;\n    }\n  }\n});\n\nexport const { setMessage } = utilSlice.actions;\nexport default utilSlice.reducer;","import { configureStore, getDefaultMiddleware } from 'redux-starter-kit';\nimport synth1UIReducer from './reducers/synth1UIReducer';\nimport utilReducer from './reducers/utilReducer';\n\nconst makeStore = (middleware) => {\n  middleware = middleware ? middleware : [];\n  return configureStore({\n    reducer: {\n      synth1UI: synth1UIReducer,\n      util: utilReducer,\n    },\n    middleware: [...getDefaultMiddleware(), ...middleware]\n  })\n};\n\nexport default makeStore;","import io from 'socket.io-client';\n\nexport const createEmitter = () => {\n\n  const socket = io('http://localhost:4000', {transports: ['websocket']});\n\n  return [\n    // redux middleware\n    store => next => action => {\n      const result = next(action);\n      if (!action.origin) {\n        socket.emit('action', { ...action, origin: socket.id });\n      }\n      return result;\n    },\n    // listen for actions\n    store => {\n      socket.on('action', action => {\n        store.dispatch(action);\n      });\n    }]\n}\n","import React, { useState, useEffect } from 'react';\nimport Synth1 from './Synth1/Synth1';\nimport Tone from 'tone';\nimport startAudioContext from 'startaudiocontext';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport makeStore from '../redux/store';\n// import { createLogger } from 'redux-logger';\nimport { createEmitter } from '../socket/socketEmitter';\n\n// const logger = createLogger({\n//   collapsed: true\n// });\nconst [emitter, setupListener] = createEmitter();\nconst store = makeStore([emitter]);\nsetupListener(store);\n\nconst App = () => {\n  const [isPlaying, setPlaying] = useState(false);\n  const [audioContextStarted, setAudioContextStarted] = useState(false);\n\n  // runs once after first render\n  useEffect(() => {\n    startAudioContext(Tone.context).then(() => {\n      setAudioContextStarted(true);\n    });\n  }, []);\n\n  return !audioContextStarted ? 'Click' : (\n    <Provider store={store}>\n      <button id='play-button'\n        onClick={() => setPlaying(!isPlaying)}\n      >\n        {isPlaying ? 'Stop' : 'Play'}\n      </button>\n      <Synth1 isPlaying={isPlaying} />\n    </Provider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}