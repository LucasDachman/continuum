{"version":3,"sources":["util/notes-util.js","redux/config-creators/compositionReducerConfig.js","redux/reducers/synth1Reducer.js","components/util/DialIndicator.jsx","components/util/Dial.jsx","components/Synth1/Synth1.jsx","BassSynth/bassReducer.js","BassSynth/BassSynth.jsx","LennySynth/lennyReducer.js","components/piano-roll/Cell.jsx","components/piano-roll/PianoRoll.jsx","Drummer/drummerReducer.js","components/piano-roll/DrumCell.jsx","components/piano-roll/DrumSequencer.jsx","LennySynth/LennySynth.jsx","Drummer/Drummer.jsx","components/Matchmaking.jsx","components/App.jsx","audio/CSynth.js","BassSynth/BassSynthAudio.js","redux/subscriptions.js","redux/reducers/utilReducer.js","redux/reducers/characterReducer.js","redux/store.js","socket/configureSocket.js","audio/Sequence.js","audio/Sequencer.js","LennySynth/LennySynthAudio.js","util/util.js","Drummer/DrummerAudio.js","index.js","audio-files/kicks/kick_02.wav","audio-files/snares/snare_01.wav","audio-files/rims/rim_01.wav","audio-files/shaker_snaps/shaker_snap_01.wav","audio-files/claps/clap_01.wav","audio-files/short_cymbals/short_cymbal_01.wav","audio-files/long_cymbals/long_cymbal_01.wav"],"names":["midiToNote","noteNumber","freq","Tone","Frequency","name","toNote","frequency","toFrequency","color","includes","midi","octaveNotes","notes","scale","map","toMidi","createCompositionSliceConfig","initialState","range","i","active","note","keyIndex","reducers","setCompositionCell","state","action","payload","row","col","composition","toggleCompositionCell","transpose","semitones","cell","compositionReducerConfig","synth1Slice","createSlice","slice","amp","attack","decay","sustain","release","filter","base","q","setAmp","Object","entries","key","value","setFilter","actions","DialIndicator","strokeWidth","useCircularInputContext","getPointFromValue","center","x","y","ref","useRef","useCircularDrag","x1","y1","x2","y2","stroke","cx","cy","r","opacity","memo","onChange","children","disabled","handleChange","useCallback","throttle","v","className","radius","strokeLinecap","style","zIndex","mapDispatch","useSetCallback","set","attr","connect","synth1","id","bassSlice","length","shape","setLength","setShape","setFilterDecay","setFilterRange","setFilterQ","bass","filterDecay","filterRange","filterQ","currentCharacter","character","lennySlice","reverb","phaser","vibratoDepth","setReverb","setPhaser","setVibratoDepth","toggleActions","toggle1","toggleBass","lenny","toggleLenny","playing","dispatch","useDispatch","useSelector","handleClick","e","stopPropagation","Boolean","cells","onClick","_","cn","PianoRoll","currentStep","n","rowNum","colNum","files","kick","snare","rim","shakerSnap","clap","shortCymbal","longCymbal","path","match","index","String","compositionSliceConfig","drummerSlice","filterFreq","setFilterFreq","toggleDrummer","drummer","isDrummer","DrumSequencer","drumFiles","file","DrumCell","mapDispatchToProps","type","checked","target","Matchmaking","useState","isPlaying","setPlaying","audioContextStarted","setAudioContextStarted","setCurrentStep","tonic","setTonic","setScale","handleTonicChange","handleScaleChange","useEffect","startAudioContext","context","then","sequencer","onTick","step","start","stop","resume","CSynth","triggerAttack","synth","triggerRelease","triggerAttackRelease","time","setAmpAttack","ratio","envelope","setAmpDecay","setAmpSustain","setAmpRelease","setFilterAttack","filterEnvelope","setFilterSustain","setFilterRelease","setFilterBase","baseFrequency","octaves","Q","Error","this","PolySynth","MonoSynth","chain","Limiter","Master","volume","oscillator","BassSynthAudio","detune","subscribe","store","callback","watch","getState","get","subscribeCSynth","synthName","subscribeBassSynth","subscribeLennySynth","subscribeDrummer","subscribeSequencer","sequence","rowi","coli","raw","addNote","removeNote","sequences","utilSlice","message","startTime","setMessage","console","log","setStartTime","characterSlice","setCharacter","makeStore","middleware","configureStore","reducer","synth1Reducer","bassReducer","lennyReducer","drummerReducer","util","utilReducer","characterReducer","getDefaultMiddleware","preloadedState","blackList","makeActionEmitter","socket","next","result","origin","emit","makeStoreWithSocket","a","io","process","transports","Promise","resolve","on","config","actionEmitter","cb","charactersById","Sequence","numSteps","chords","frequencyOffset","chord","push","Array","fill","Sequencer","bpm","loop","_loopCallback","_onTick","values","seq","nextChord","getNotes","createSequence","Transport","Loop","humanize","Draw","schedule","LennySynthAudio","in_min","out_min","roomSize","wet","vibrato","depth","Freeverb","Vibrato","Phaser","stages","DrummerAudio","forEach","urls","restart","Math","pow","reduce","acc","Filter","Players","Volume","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.86f9ebdd.chunk.js","sourcesContent":["import Tone from 'tone';\n\n/**\n * https://pages.mtu.edu/~suits/west_scales.html\n * https://www.musicnotes.com/now/tips/circle-of-fifths-guide/\n * https://github.com/tonaljs/tonal/blob/master/packages/scale-dictionary/data.ts\n */\n\n// helper functions\nexport function isBlack(note) {\n  return note.color === 'black';\n}\n\nexport function isWhite(note) {\n  return note.color === 'white'\n}\n\nexport function generateNotes(startNote = 0, endNote = 127) {\n  if (startNote < 0 || endNote > 127) {\n    console.error('note out of range');\n    return;\n  }\n\n  let notes = new Array(endNote - startNote).fill(0).map((_, i) => i + startNote);\n  notes = notes.map(midiToNote);\n  return notes;\n}\n\nexport const midiToNote = noteNumber => {\n  const freq = Tone.Frequency(noteNumber, 'midi');\n  const name = freq.toNote();\n  return {\n    name,\n    frequency: freq.toFrequency(),\n    color: name.includes('#') ? 'black' : 'white',\n    midi: noteNumber\n  }\n}\n\nexport const nameToNote = name => {\n  const freq = Tone.Frequency(name, 'note');\n  return {\n    name,\n    frequency: freq.toFrequency(),\n    color: name.includes('#') ? 'black' : 'white',\n    midi: freq.toMidi()\n  }\n}\n\nexport const octaveNotes = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\n","\nimport { midiToNote, nameToNote } from '../../util/notes-util';\nimport { scale } from '@tonaljs/scale';\nimport { range } from 'lodash';\n\nexport const numNotes = 14;\nexport const numSteps = 16;\nexport const startNote = 36;\n// export const notes = generateNotes(startNote, startNote + numNotes);\n\nexport const notes = [...scale('B3 minor').notes, ...scale('B4 minor').notes].map(nameToNote);\n\nexport const createCompositionSliceConfig = () => ({\n  initialState: range(numNotes)\n    .map(i =>\n      range(numSteps)\n        .map(() => ({\n          active: false,\n          note: notes[i],\n          keyIndex: i\n        }))\n    ),\n  reducers: {\n    setCompositionCell(state, action) {\n      const { row, col, active } = action.payload;\n      state.composition[row][col].active = active;\n    },\n    toggleCompositionCell(state, action) {\n      const { row, col } = action.payload;\n      state.composition[row][col].active = !state.composition[row][col].active;\n    },\n    transpose(state, action) {\n      const { semitones } = action.payload;\n      state.composition = state.composition\n        .map(row => row.map(cell => midiToNote(cell.midi + semitones)));\n    }\n  }\n});","import { createSlice } from 'redux-starter-kit';\nimport { createCompositionSliceConfig } from '../config-creators/compositionReducerConfig';\n\nconst compositionReducerConfig = createCompositionSliceConfig();\n\nconst synth1Slice = createSlice({\n  slice: 'synth1',\n  initialState: {\n    amp: {\n      attack: 0,\n      decay: 0.5,\n      sustain: 1,\n      release: 0.2\n    },\n    filter: {\n      attack: 0,\n      decay: 0.5,\n      sustain: 1,\n      release: 0.2,\n      base: 0,\n      range: 0.5,\n      q: 0,\n    },\n    composition: compositionReducerConfig.initialState\n  },\n  reducers: {\n    setAmp(state, action) {\n      // allow for setting arbitrary values\n      for (let [key, value] of Object.entries(action.payload)) {\n        state.amp[key] = value;\n      }\n    },\n    setFilter(state, action) {\n      // allow for setting arbitrary values\n      for (let [key, value] of Object.entries(action.payload)) {\n        state.filter[key] = value;\n      }\n    },\n    ...compositionReducerConfig.reducers\n  }\n});\n\nexport const { setAmp, setFilter, setCompositionCell, toggleCompositionCell } = synth1Slice.actions;\nexport default synth1Slice.reducer;","import React, { useRef } from 'react';\nimport {\n  useCircularInputContext,\n  useCircularDrag\n} from 'react-circular-input'\n\nconst DialIndicator = ({strokeWidth}) => {\n  const { getPointFromValue, center } = useCircularInputContext()\n  const { x, y,  } = getPointFromValue()\n\n  const ref = useRef(null)\n  useCircularDrag(ref)\n\n  return <g>\n    <line x1={center.x} y1={center.y} x2={x} y2={y} stroke='black' strokeWidth={strokeWidth}/>\n    {/* <line x1={center.x} y1={center.y} x2={x} y2={y} stroke='white' strokeOpacity={0} strokeWidth={6}/> */}\n    <circle ref={ref} cx={x} cy={y} r={20} stroke='white' opacity={0}/>\n  </g> \n\n}\n\nexport default DialIndicator;","import React, { memo, useCallback } from 'react';\nimport { throttle } from 'lodash';\n\nimport {\n  CircularInput,\n  CircularTrack,\n  CircularProgress,\n} from 'react-circular-input';\nimport DialIndicator from './DialIndicator';\n\nconst Dial = ({ value, onChange, children, disabled }) => {\n\n  const handleChange = useCallback(throttle(v => {\n    onChange(v)\n  }, 100), [onChange])\n\n  return (\n    <div className='knob'>\n      <div>\n        <CircularInput radius={21}\n          value={value}\n          onChange={disabled ? () => {} : handleChange}>\n          <CircularTrack stroke='lightgray' strokeWidth={1} strokeLinecap='square'/>\n          <CircularProgress stroke='black' strokeWidth={2}  strokeLinecap='square'/>\n          <DialIndicator strokeWidth={2}/>\n        </CircularInput>\n      </div>\n      <div style={{ zIndex: -1 }}>{children}</div>\n    </div>\n  );\n}\n\nexport default memo(Dial);","import React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport { setAmp, setFilter } from '../../redux/reducers/synth1Reducer';\nimport Dial from '../util/Dial';\n\nconst mapDispatch = {\n  setAmp,\n  setFilter,\n};\n\nconst mapStateToProps = state => ({\n  amp: state.synth1.amp,\n  filter: state.synth1.filter,\n});\n\nconst useSetCallback = (set, attr) => {\n  return useCallback(v => set({ [attr]: v }), [set, attr]);\n}\n\nconst Synth1 = ({ setAmp, setFilter, amp, filter }) => {\n\n  // actual render code\n  return (\n    <>\n    <h2>Synth 1</h2>\n    <div className='synth-1 synth'>\n      <section id='amp-env'>\n        <div className='knob-row knob-row-vertical'>\n          <h4>Amp</h4>\n          <Dial\n            value={amp.attack}\n            onChange={useSetCallback(setAmp, 'attack')} >\n            Attack\n          </Dial>\n          <Dial\n            value={amp.decay}\n            onChange={useSetCallback(setAmp, 'decay')} >\n            Decay\n          </Dial>\n          <Dial\n            value={amp.sustain}\n            onChange={useSetCallback(setAmp, 'sustain')} >\n            Sustain\n          </Dial>\n          <Dial\n            value={amp.release}\n            onChange={useSetCallback(setAmp, 'release')} >\n            Release\n          </Dial>\n        </div>\n      </section>\n      <section id='filter-env'>\n        <div className='knob-row knob-row-vertical'>\n          <h4>Filter</h4>\n          <Dial\n            value={filter.attack}\n            onChange={useSetCallback(setFilter, 'attack')} >\n            Attack\n          </Dial>\n          <Dial\n            value={filter.decay}\n            onChange={useSetCallback(setFilter, 'decay')} >\n            Decay\n          </Dial>\n          <Dial\n            value={filter.sustain}\n            onChange={useSetCallback(setFilter, 'sustain')} >\n            Sustain\n          </Dial>\n          <Dial\n            value={filter.release}\n            onChange={useSetCallback(setFilter, 'release')} >\n            Release\n          </Dial>\n        </div>\n        <div className='knob-row knob-row-vertical'>\n          <Dial\n            value={filter.base}\n            onChange={useSetCallback(setFilter, 'base')} >\n            Base\n          </Dial>\n          <Dial\n            value={filter.range}\n            onChange={useSetCallback(setFilter, 'range')} >\n            Range\n          </Dial>\n          <Dial\n            value={filter.q}\n            onChange={useSetCallback(setFilter, 'q')} >\n            Q\n          </Dial>\n        </div>\n      </section>\n    </div>\n    </>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatch\n)(Synth1);\n","import { createSlice } from 'redux-starter-kit';\nimport { createCompositionSliceConfig } from '../redux/config-creators/compositionReducerConfig';\n\nconst compositionReducerConfig = createCompositionSliceConfig();\n\nconst bassSlice = createSlice({\n  slice: 'bass',\n  initialState: {\n    length: 0.07,\n    shape: 0,\n    filter: {\n      decay: 0.5,\n      range: 0.3769,\n      q: 0.1,\n    },\n    composition: compositionReducerConfig.initialState\n  },\n  reducers: {\n    ...compositionReducerConfig.reducers,\n    setLength(state, action) {\n      state.length = action.payload;\n    },\n    setShape(state, action) {\n      state.shape = action.payload;\n    },\n    setFilterDecay(state, action) {\n      state.filter.decay = action.payload;\n    },\n    setFilterRange(state, action) {\n      state.filter.range = action.payload;\n    },\n    setFilterQ(state, action) {\n      state.filter.q = action.payload;\n    },\n  }\n});\n\nexport const {\n  setCompositionCell,\n  toggleCompositionCell,\n  setLength,\n  setShape,\n  setFilterDecay,\n  setFilterRange,\n  setFilterQ,\n} = bassSlice.actions;\nexport default bassSlice.reducer;","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  setCompositionCell,\n  setLength,\n  setShape,\n  setFilterDecay,\n  setFilterRange,\n  setFilterQ\n} from './bassReducer';\nimport Dial from '../components/util/Dial';\n\nconst mapDispatch = {\n  setCompositionCell,\n  setLength,\n  setShape,\n  setFilterDecay,\n  setFilterRange,\n  setFilterQ\n};\n\nconst mapStateToProps = state => ({\n  length: state.bass.length,\n  shape: state.bass.shape,\n  filterDecay: state.bass.filter.decay,\n  filterRange: state.bass.filter.range,\n  filterQ: state.bass.filter.q,\n  currentCharacter: state.character.character\n});\n\nconst BassSynth = ({\n  setLength,\n  setShape,\n  setFilterDecay,\n  setFilterRange,\n  setFilterQ,\n  length,\n  shape,\n  filterDecay,\n  filterRange,\n  filterQ,\n  currentCharacter\n}) => {\n\n  const disabled = currentCharacter !== 'bass';\n  // actual render code\n  return (\n    <div className={`bass-synth synth ${disabled ? '' : 'current'} `}>\n      <h2>Bass</h2>\n      <div className='knob-row'>\n        <Dial\n          disabled={disabled}\n          value={length}\n          onChange={setLength} >\n          Length\n        </Dial>\n        <Dial\n          disabled={disabled}\n          value={shape}\n          onChange={setShape} >\n          Shape\n        </Dial>\n        <Dial\n          disabled={disabled}\n          value={filterDecay}\n          onChange={setFilterDecay} >\n          Decay\n        </Dial>\n        <Dial\n          disabled={disabled}\n          value={filterRange}\n          onChange={setFilterRange} >\n          Brightness\n        </Dial>\n        <Dial\n          disabled={disabled}\n          value={filterQ}\n          onChange={setFilterQ} >\n          Harshness\n        </Dial>\n      </div>\n    </div >\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatch\n)(BassSynth);\n","import { createSlice } from 'redux-starter-kit';\nimport { createCompositionSliceConfig } from '../redux/config-creators/compositionReducerConfig';\n\nconst compositionReducerConfig = createCompositionSliceConfig();\n\nconst lennySlice = createSlice({\n  slice: 'lenny',\n  initialState: {\n    reverb: 0,\n    length: 0.25,\n    phaser: false,\n    vibratoDepth: 0.1,\n    composition: compositionReducerConfig.initialState\n  },\n  reducers: {\n    ...compositionReducerConfig.reducers,\n    setReverb(state, action) {\n      state.reverb = action.payload;\n    },\n    setLength(state, action) {\n      state.length = action.payload;\n    },\n    setPhaser(state, action) {\n      state.phaser = action.payload; \n    },\n    setVibratoDepth(state, action) {\n      state.vibratoDepth = action.payload;\n    }\n  }\n});\n\nexport const {\n  setCompositionCell,\n  toggleCompositionCell,\n  setReverb,\n  setLength,\n  setPhaser,\n  setVibratoDepth\n} = lennySlice.actions\nexport default lennySlice.reducer;\n\n","import React, { useCallback, memo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toggleCompositionCell as toggle1 } from '../../redux/reducers/synth1Reducer';\nimport { toggleCompositionCell as toggleBass } from '../../BassSynth/bassReducer';\nimport { toggleCompositionCell as toggleLenny } from '../../LennySynth/lennyReducer';\nimport _ from 'lodash'\nimport './cell.css';\n\nconst toggleActions = {\n  synth1: toggle1,\n  bass: toggleBass,\n  lenny: toggleLenny,\n};\n\nconst Cell = ({ row, col, playing }) => {\n  const dispatch = useDispatch();\n\n  const currentCharacter = useSelector(state => state.character.character);\n\n  const handleClick = useCallback((e) => {\n    e.stopPropagation();\n    Boolean(toggleActions[currentCharacter]) &&\n      dispatch(toggleActions[currentCharacter]({ row, col }));\n  }, [row, col, currentCharacter, dispatch]);\n\n  const cells = {\n    synth1: useSelector(state => state.synth1.composition[row][col]),\n    bass: useSelector(state => state.bass.composition[row][col]),\n    lenny: useSelector(state => state.lenny.composition[row][col]),\n  };\n\n  const className = currentCharacter in cells ? 'piano-cell clickable' : 'piano-cell';\n\n  return (\n    <span className={className} onClick={handleClick} >\n      {\n        _.map(cells, (cell, character) => {\n          if (!cell.active) return;\n          const cn = 'cell-trigger ' +\n            `cell-trigger-${character} ` +\n            `${playing ? 'playing' : ''} ` +\n            `${currentCharacter === character ? 'current' : ''} `\n          return <span\n            key={character}\n            onClick={handleClick}\n            className={cn}\n          />\n        })\n      }\n    </span>\n  );\n}\n\nexport default memo(Cell);","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport Cell from './Cell';\nimport { isBlack } from '../../util/notes-util';\nimport { notes, numSteps } from '../../redux/config-creators/compositionReducerConfig';\nimport { range } from 'lodash';\nimport './piano-roll.css';\n\nconst PianoRollKeys = () => (\n  <section className='piano-roll-keys'>\n    {notes.map((n, i) => {\n      const className = ['piano-key', isBlack(n) ? 'black' : 'white'].join(' ');\n      return (\n        <div\n          className={className}\n          key={n.name}>\n          <p>{n.name}</p>\n        </div>\n      );\n    })}\n  </section>\n);\n\nconst PianoRoll = ({ currentStep }) => {\n  const currentCharacter = useSelector(state => state.character.character);\n  return (\n    <div className={`piano-roll ${currentCharacter}`}>\n      <section className='piano-roll-editor'>\n        {\n          notes.map((n, rowNum) =>\n            <section key={n.name} className={'step-row'}>\n              {\n                range(numSteps).map(colNum =>\n                  <Cell key={colNum} row={rowNum} col={colNum} playing={currentStep === colNum} />\n                )\n              }\n            </section>\n          )\n        }\n      </section>\n    </div>\n  );\n}\n\nexport default PianoRoll;\n","import { createSlice } from 'redux-starter-kit';\nimport { createCompositionSliceConfig } from '../redux/config-creators/compositionReducerConfig';\n\nimport kick from '../audio-files/kicks/kick_02.wav';\nimport snare from '../audio-files/snares/snare_01.wav'\nimport rim from '../audio-files/rims/rim_01.wav';\nimport shakerSnap from '../audio-files/shaker_snaps/shaker_snap_01.wav';\nimport clap from '../audio-files/claps/clap_01.wav';\nimport shortCymbal from '../audio-files/short_cymbals/short_cymbal_01.wav';\nimport longCymbal from '../audio-files/long_cymbals/long_cymbal_01.wav';\n\nconst files = [kick, snare, rim, shakerSnap, clap, shortCymbal, longCymbal]\n  .map((path, i) => ({\n    path,\n    name: path.match(/\\w*_\\d\\d(?=\\.)/)[0] || 'default',\n    index: String(i)\n  }));\n\n// const kicksContext = require.context('../audio-files/kicks/', true, /01\\.wav$/);\n// const snaresContext = require.context('../audio-files/snares', true, /01\\.wav$/);\n// const rimsContext = require.context('../audio-files/rims', true, /01\\.wav$/);\n// const shakerSnapsContext = require.context('../audio-files/shaker_snaps', true, /01\\.wav$/);\n// const clapsContext = require.context('../audio-files/claps', true, /01\\.wav$/);\n// const shortCymbalsContext = require.context('../audio-files/short_cymbals', true, /01\\.wav$/);\n// const longCymbalsContext = require.context('../audio-files/long_cymbals', true, /01\\.wav$/);\n\n// resolve file paths\n// for (let [key, context] of Object.entries(files)) {\n//   files[key] = context.keys().map(k => {\n//     const file = context(k)\n//     const name = file.match(/\\w*_\\d\\d(?=\\.)/)[0] || 'default';\n//     return { file, name };\n//   });\n// }\n\nconst compositionSliceConfig = createCompositionSliceConfig();\n\nconst drummerSlice = createSlice({\n  slice: 'drummer',\n  initialState: {\n    files,\n    filterFreq: 1,\n    composition: compositionSliceConfig.initialState,\n  },\n  reducers: {\n    ...compositionSliceConfig.reducers,\n    setFilterFreq(state, action) {\n      state.filterFreq = action.payload;\n    }\n  }\n});\n\nexport const {\n  setCompositionCell,\n  toggleCompositionCell,\n  setFilterFreq\n} = drummerSlice.actions;\nexport default drummerSlice.reducer;","import React, { useCallback, memo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toggleCompositionCell as toggleDrummer } from '../../Drummer/drummerReducer';\nimport './cell.css';\n\n\nconst Cell = ({ row, col, playing }) => {\n  const dispatch = useDispatch();\n  const currentCharacter = useSelector(state => state.character.character);\n\n  const handleClick = useCallback(e => {\n    e.stopPropagation();\n    currentCharacter === 'drummer' &&\n      dispatch(toggleDrummer({ row, col }));\n  }, [row, col, dispatch, currentCharacter]);\n\n  const cell = useSelector(state => state.drummer.composition[row][col]);\n  const isDrummer = currentCharacter === 'drummer';\n  const className =  isDrummer ? 'piano-cell clickable' : 'piano-cell';\n\n  return (\n    <span className={className} onClick={handleClick} >\n      {\n        cell.active &&\n        <span\n          onClick={handleClick}\n          className={\n            'cell-trigger cell-trigger-drummer ' +\n            `${playing ? 'playing' : ''} ` +\n            `${isDrummer ? 'current' : ''}`\n          }\n        />\n      }\n    </span>\n  );\n}\n\nexport default memo(Cell);","import React from 'react';\nimport { numSteps } from '../../redux/config-creators/compositionReducerConfig';\nimport { range } from 'lodash';\nimport { useSelector } from 'react-redux';\nimport './piano-roll.css';\nimport DrumCell from './DrumCell';\n\nconst DrumSequencer = ({ currentStep }) => {\n  const drumFiles = useSelector(state => state.drummer.files);\n  const currentCharacter = useSelector(state => state.character.character);\n\n  return (\n    <div className={`piano-roll drum-sequencer ${currentCharacter === 'drummer' ? 'drummer' : ''}`}>\n      <div className='piano-roll-keys'>\n        {drumFiles.map((file, i) =>\n          <div\n            className='piano-key'\n            key={file.name}>\n            <p>{drumFiles[i].name}</p>\n          </div>\n        )}\n      </div>\n      <section className='piano-roll-editor'>\n        {\n          drumFiles.map((n, rowNum) =>\n            <section key={n.name} className={'step-row'}>\n              {\n                range(numSteps).map(colNum =>\n                  <DrumCell key={colNum} row={rowNum} col={colNum} playing={currentStep === colNum} />\n                )\n              }\n            </section>\n          )\n        }\n      </section>\n    </div>\n  );\n}\n\nexport default DrumSequencer;\n","import React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport Dial from '../components/util/Dial.jsx';\nimport {\n  setReverb,\n  setLength,\n  setPhaser,\n  setVibratoDepth\n} from './lennyReducer';\n\nconst mapStateToProps = state => ({\n  reverb: state.lenny.reverb,\n  length: state.lenny.length,\n  phaser: state.lenny.phaser,\n  vibratoDepth: state.lenny.vibratoDepth,\n  currentCharacter: state.character.character\n});\n\nconst mapDispatchToProps = {\n  setReverb,\n  setLength,\n  setPhaser,\n  setVibratoDepth\n};\n\nconst LennySynth = ({\n  reverb,\n  setReverb,\n  length,\n  setLength,\n  phaser,\n  setPhaser,\n  vibratoDepth,\n  setVibratoDepth,\n  currentCharacter\n}) => {\n  const disabled = currentCharacter !== 'lenny';\n  return (\n    <div className={`lenny-synth synth ${disabled ? '' : 'current'} `}>\n      <h2>Synth</h2>\n      <div className='knob-row knob-row-vertical'>\n        <Dial\n          disabled={disabled}\n          value={length}\n          onChange={setLength} >\n          Length\n        </Dial>\n        <Dial\n          disabled={disabled}\n          value={reverb}\n          onChange={setReverb} >\n          Reverb\n        </Dial>\n        <input type='checkbox' checked={phaser} onChange={useCallback(e => setPhaser(e.target.checked), [setPhaser])} />\n        <Dial\n          disabled={disabled}\n          value={vibratoDepth}\n          onChange={setVibratoDepth} >\n          Vibrato\n          </Dial>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LennySynth);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setFilterFreq } from './drummerReducer';\nimport Dial from '../components/util/Dial.jsx';\n\nconst mapStateToProps = state => ({\n  filterFreq: state.drummer.filterFreq,\n  currentCharacter: state.character.character\n});\n\nconst mapDispatchToProps = {\n  setFilterFreq\n}\n\nconst Drummer = ({\n  filterFreq,\n  setFilterFreq,\n  currentCharacter\n}) => {\n  const disabled = currentCharacter !== 'drummer';\n  return (\n    <div className={`drummer-synth synth ${disabled ? '' : 'current'} `}>\n      <h2>Drums</h2>\n      <div className='knob-row knob-row-horizontal'>\n        <Dial\n          value={filterFreq}\n          onChange={setFilterFreq}\n          disabled={disabled}>\n          Filter Freq\n        </Dial>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Drummer);","import React from 'react';\n\nconst Matchmaking = () => {\n  return ( \n    <h1>Please Click to Continue</h1>\n  );\n}\n \nexport default Matchmaking;","import React, { useState, useEffect, useCallback } from 'react';\nimport Synth1 from './Synth1/Synth1';\nimport BassSynth from '../BassSynth/BassSynth.jsx';\nimport PianoRoll from './piano-roll/PianoRoll.jsx';\nimport Tone from 'tone';\nimport startAudioContext from 'startaudiocontext';\nimport './App.css';\nimport { octaveNotes } from '../util/notes-util';\nimport { sequencer } from '../index';\nimport { connect } from 'react-redux';\nimport DrumSequencer from './piano-roll/DrumSequencer.jsx';\nimport LennySynth from '../LennySynth/LennySynth';\nimport Drummer from '../Drummer/Drummer';\nimport Matchmaking from './Matchmaking';\n\nconst mapStateToProps = state => ({\n  character: state.character.character\n});\n\nconst App = ({ character }) => {\n  const [isPlaying, setPlaying] = useState(false);\n  const [audioContextStarted, setAudioContextStarted] = useState(false);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [tonic, setTonic] = useState(octaveNotes[0]);\n  const [scale, setScale] = useState('major');\n\n  const handlePlay = () => {\n    Tone.context.resume();\n    setPlaying(!isPlaying)\n  }\n\n  const handleTonicChange = useCallback(e => {\n    setTonic(e.target.value);\n  }, [setTonic]);\n\n  const handleScaleChange = useCallback(e => {\n    setScale(e.target.value);\n  }, [setScale]);\n\n  // runs once after first render\n  useEffect(() => {\n    // wait for audio context to start before rendering\n    startAudioContext(Tone.context).then(() => {\n      setAudioContextStarted(true);\n    });\n\n    // callback for sequencer1\n    sequencer.onTick = step => {\n      setCurrentStep(step);\n    }\n  }, []);\n\n  useEffect(() => {\n    isPlaying ? sequencer.start() : sequencer.stop();\n  }, [isPlaying])\n\n  return !audioContextStarted ? <Matchmaking /> : (\n    <main>\n      <section id='control-panel'>\n        <p>You are: {character}</p>\n        <button id='play-button'\n          onClick={handlePlay}\n        >\n          {isPlaying ? 'Stop' : 'Play'}\n        </button>\n        <select value={tonic} onChange={handleTonicChange}>\n          {\n            octaveNotes.map(note => <option key={note} value={note}>{note}</option>)\n          }\n        </select>\n        <select value={scale} onChange={handleScaleChange}>\n          <option value='Major'>Major</option>\n          <option value='Minor'>Minor</option>\n        </select>\n      </section>\n      <BassSynth />\n      <LennySynth />\n      <Drummer />\n      <section id='sequencer'>\n        <PianoRoll currentStep={currentStep} />\n        <DrumSequencer currentStep={currentStep}/>\n      </section>\n    </main>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(App);","import Tone from 'tone';\n\nexport default class CSynth {\n  name = null;\n  constructor(name) {\n    if (!name) {\n      throw new Error('CSynth constructor requires a name');\n    }\n    this.name = name;\n    this.synth = new Tone.PolySynth(6, Tone.MonoSynth)\n      .chain(\n        new Tone.Limiter(),\n        Tone.Master\n      );\n    this.synth.set({\n      volume: -12,\n      oscillator: {\n        type: 'sawtooth'\n      },\n    });\n  }\n\n  triggerAttack = (frequency) => {\n    this.synth.triggerAttack(frequency);\n  }\n\n  triggerRelease = (frequency) => {\n    this.synth.triggerRelease(frequency);\n  }\n\n  triggerAttackRelease = (notes, length, time) => {\n    this.synth.triggerAttackRelease(notes, length, time);\n  }\n\n  setAmpAttack = (ratio) => {\n    this.synth.set({\n      envelope: {\n        attack: ratio + 0.01\n      }\n    });\n  }\n\n  setAmpDecay = (ratio) => {\n    this.synth.set({\n      envelope: {\n        decay: ratio + 0.01\n      }\n    });\n  }\n\n  setAmpSustain = (ratio) => {\n    this.synth.set({\n      envelope: {\n        sustain: ratio\n      }\n    });\n  }\n\n  setAmpRelease = (ratio) => {\n    this.synth.set({\n      envelope: {\n        release: (ratio * 10) + 0.01\n      }\n    });\n  }\n\n  setFilterAttack = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        attack: (ratio / 5) + 0.01\n      }\n    });\n  }\n\n  setFilterDecay = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        decay: ratio + 0.01\n      }\n    });\n  }\n\n  setFilterSustain = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        sustain: ratio\n      }\n    });\n  }\n\n  setFilterRelease = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        release: (ratio * 100) + 0.01\n      }\n    });\n  }\n\n  setFilterBase = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        baseFrequency: (ratio * 500) + 1\n      }\n    });\n  }\n\n  setFilterRange = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        octaves: ratio * 20\n      }\n    });\n  }\n\n  setFilterQ = (ratio) => {\n    this.synth.set({\n      filter: {\n        Q: ratio * 10\n      }\n    })\n  }\n}","import Tone from 'tone';\n\nexport default class BassSynthAudio {\n  name = null;\n  constructor(name) {\n    if (!name) {\n      throw new Error('CSynth constructor requires a name');\n    }\n    this.name = name;\n    this.synth = new Tone.PolySynth(1, Tone.MonoSynth)\n      .chain(\n        new Tone.Limiter(),\n        Tone.Master\n      );\n    this.synth.set({\n      volume: -12,\n      detune: -3200,\n      oscillator: {\n        type: 'sawtooth'\n      },\n      envelope: {\n        attack: 0.01,\n        sustain: 1,\n        decay: 0.05\n      },\n      filter: {\n        baseFrequency: 6,\n      },\n      filterEnvelope: {\n        sustain: 0.47415415352178325,\n      }\n    });\n  }\n\n  triggerAttack = (frequency) => {\n    this.synth.triggerAttack(frequency);\n  }\n\n  triggerRelease = (frequency) => {\n    this.synth.triggerRelease(frequency);\n  }\n\n  triggerAttackRelease = (notes, length, time) => {\n    this.synth.triggerAttackRelease(notes, length, time);\n  }\n\n  setLength = ratio => {\n    this.synth.set({\n      envelope: {\n        release: (ratio * 10) + 0.01\n      },\n      filterEnvelope: {\n        release: (ratio * 100) + 0.01\n      }\n    })\n  }\n\n  setShape = ratio => {\n    this.synth.set({\n      filterEnvelope: {\n        attack: (ratio / 5) + 0.01\n      }\n    });\n  }\n\n  setFilterDecay = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        decay: ratio + 0.01\n      }\n    });\n  }\n\n  setFilterRange = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        octaves: ratio * 20\n      }\n    });\n  }\n\n  setFilterQ = (ratio) => {\n    this.synth.set({\n      filter: {\n        Q: ratio * 10\n      }\n    })\n  }\n}","// import store from './store';\nimport watch from 'redux-watch';\nimport { get } from 'object-path';\n\n// use redux-watch to subscribe to a certain store value\n// and use the callback to set the initial value\nconst subscribe = (store, path, callback) => {\n  store.subscribe(watch(store.getState, path)(callback));\n  callback(get(store.getState(), path));\n}\n\nexport function subscribeCSynth(store, synth) {\n  const synthName = synth.name;\n  subscribe(store, `${synthName}.amp.attack`, synth.setAmpAttack);\n  subscribe(store, `${synthName}.amp.decay`, synth.setAmpDecay);\n  subscribe(store, `${synthName}.amp.sustain`, synth.setAmpSustain);\n  subscribe(store, `${synthName}.amp.release`, synth.setAmpRelease);\n\n  subscribe(store, `${synthName}.filter.attack`, synth.setFilterAttack);\n  subscribe(store, `${synthName}.filter.decay`, synth.setFilterDecay);\n  subscribe(store, `${synthName}.filter.sustain`, synth.setFilterSustain);\n  subscribe(store, `${synthName}.filter.release`, synth.setFilterRelease);\n  subscribe(store, `${synthName}.filter.base`, synth.setFilterBase);\n  subscribe(store, `${synthName}.filter.range`, synth.setFilterRange);\n  subscribe(store, `${synthName}.filter.q`, synth.setFilterQ);\n}\n\nexport function subscribeBassSynth(store, synth) {\n  const synthName = synth.name;\n  subscribe(store, `${synthName}.length`, synth.setLength)\n  subscribe(store, `${synthName}.shape`, synth.setShape);\n  subscribe(store, `${synthName}.filter.decay`, synth.setFilterDecay);\n  subscribe(store, `${synthName}.filter.range`, synth.setFilterRange);\n  subscribe(store, `${synthName}.filter.q`, synth.setFilterQ);\n}\n\nexport function subscribeLennySynth(store, synth) {\n  const synthName = synth.name;\n  subscribe(store, `${synthName}.reverb`, synth.setReverb);\n  subscribe(store, `${synthName}.length`, synth.setLength);\n  subscribe(store, `${synthName}.phaser`, synth.setPhaser);\n  subscribe(store, `${synthName}.vibratoDepth`, synth.setVibratoDepth);\n}\n\nexport function subscribeDrummer(store, synth) {\n  const synthName = synth.name;\n  subscribe(store, `${synthName}.filterFreq`, synth.setFilterFreq);\n}\n\n\n/**\n * TODO: Remove frequency information from composition and get \n * frequencies from key number so that notes/scales can be changed\n */\n\nexport function subscribeSequencer(store, sequencer) {\n  // subscribe each sequence to it's corresponding composition in the redux store\n  for (const [synthName, sequence] of Object.entries(sequencer.sequences)) {\n    const { composition } = store.getState()[synthName];\n    // subscribe to each cell in the matrix\n    for (const [rowi, row] of composition.entries()) {\n      for (const [coli, cell] of row.entries()) {\n        const path = String.raw`${synthName}.composition.${rowi}.${coli}.active`;\n        subscribe(store, path, active => {\n          const freq = synthName === 'drummer' ? String(cell.keyIndex) : cell.note.frequency;\n          if (active) {\n            sequence.addNote({ index: coli, freq });\n          } else {\n            sequence.removeNote({ index: coli, freq });\n          }\n        });\n      }\n    }\n  }\n}","import { createSlice } from 'redux-starter-kit';\n\nconst utilSlice = createSlice({\n  initialState: {\n    message: 'Hello, World',\n    startTime: null\n  },\n  reducers: {\n    setMessage(state, action) {\n      console.log('change to ', action.payload);\n      state.message = action.payload;\n    },\n    setStartTime(state, action) {\n      state.startTime = action.payload;\n    }\n  }\n});\n\nexport const { setMessage, setStartTime } = utilSlice.actions;\nexport default utilSlice.reducer;","import { createSlice } from 'redux-starter-kit';\n\nconst characterSlice = createSlice({\n  initialState: {\n    character: null,\n  },\n  reducers: {\n    setCharacter(state, action) {\n      state.character = action.payload.character;\n    }\n  }\n});\n\nexport const { setCharacter } = characterSlice.actions;\nexport default characterSlice.reducer;","import { configureStore, getDefaultMiddleware } from 'redux-starter-kit';\nimport synth1Reducer from './reducers/synth1Reducer';\nimport bassReducer from '../BassSynth/bassReducer';\nimport lennyReducer from '../LennySynth/lennyReducer'\nimport drummerReducer from '../Drummer/drummerReducer';\nimport utilReducer from './reducers/utilReducer';\nimport characterReducer from './reducers/characterReducer';\n\nconst makeStore = (middleware = [], initialState) => {\n  return configureStore({\n    reducer: {\n      synth1: synth1Reducer,\n      bass: bassReducer,\n      lenny: lennyReducer,\n      drummer: drummerReducer,\n      util: utilReducer,\n      character: characterReducer,\n    },\n    middleware: [...getDefaultMiddleware(), ...middleware],\n    ...initialState && { preloadedState: initialState }\n  });\n};\n\nexport default makeStore;","import io from 'socket.io-client';\nimport makeStore from '../redux/store';\nimport { setCharacter } from '../redux/reducers/characterReducer';\nimport { setStartTime } from '../redux/reducers/utilReducer';\n\nconst blackList = [\n  'setCharacter'\n]\n\nconst makeActionEmitter = socket => store => next => action => {\n  const result = next(action);\n  if (!(blackList.includes(action.type)) && !action.origin) {\n    socket.emit('action', { ...action, origin: socket.id });\n  }\n  return result;\n}\n\nexport const makeStoreWithSocket = async () => {\n  const socket = io(process.env.REACT_APP_SERVER_URI, { transports: ['websocket'] });\n\n  let character, startTime;\n  // wait for initial state from server before creating store\n  const initialState = await new Promise(resolve => {\n    socket.on('init', config => {\n      console.log(config);\n      console.log('You are player ', config.character);\n      character = config.character;\n      startTime = config.startTime;\n      resolve(config.state);\n    });\n  });\n\n  const actionEmitter = makeActionEmitter(socket);\n  const store = makeStore([actionEmitter], initialState);\n\n  store.dispatch(setCharacter({ character }));\n  store.dispatch(setStartTime(startTime));\n\n  socket.on('action', action => {\n    store.dispatch(action);\n  });\n\n  socket.on('GET_STATE', (_, cb) => {\n    const { character, ...rest } = store.getState();\n    cb(rest);\n  });\n\n  socket.on('CHARACTER_CHANGE', ({ charactersById }) => {\n    const character = charactersById[socket.id];\n    store.dispatch(setCharacter({ character }))\n  });\n\n  return store;\n}\n","export default class Sequence {\n\n  chords = []\n  synth = null;\n  frequencyOffset = 0;\n\n  constructor(synth, numSteps) {\n    this.synth = synth;\n    this.chords = new Array(numSteps)\n      .fill(null).map(v => []);\n  }\n\n  getNotes(step) {\n    return this.chords[step] || [];\n    // let chord = this.chords[step] || [];\n    // return chord.map(note => note + this.frequencyOffset * 10);;\n  }\n\n  addNote = ({ index, freq }) => {\n    const chord = this.chords[index];\n    if (!chord.includes(freq)) {\n      chord.push(freq);\n    }\n  }\n\n  removeNote = ({ index, freq }) => {\n    this.chords[index] = this.chords[index].filter(value => value !== freq);\n  }\n\n}","import Tone from 'tone';\nimport Sequence from './Sequence';\n\nexport default class Sequencer {\n\n  step = 0;\n  numSteps = 0;\n  onTick = null;\n  loop = null;\n  sequences = {};\n\n  constructor({ bpm, numSteps }) {\n    this.numSteps = numSteps;\n    Tone.Transport.bpm.value = bpm;\n    Tone.Transport.start('+0.1');\n\n    this.loop = new Tone.Loop(this._loopCallback, '16n');\n    this.loop.humanize = true;\n  }\n\n  _loopCallback = (time) => {\n    // UI callback\n    this._onTick(time, this.step);\n    // trigger notes for each sequence\n    for (const seq of Object.values(this.sequences)) {\n      const nextChord = seq.getNotes(this.step)\n      nextChord.length > 0 &&\n        seq.synth.triggerAttackRelease(nextChord, '16n', time);\n    }\n    this.step++;\n    if (this.step >= this.numSteps) this.step = 0;\n  }\n\n  _onTick(time, step) {\n    if (!this.onTick) return;\n    Tone.Draw.schedule(() => {\n      this.onTick(step);\n    }, time)\n  }\n\n  createSequence = (synth) => {\n    this.sequences[synth.name] = new Sequence(synth, this.numSteps);\n  }\n\n  start = () => {\n    Tone.context.resume();\n    this.loop.start();\n  }\n\n  stop = () => {\n    this.loop.stop();\n    this.step = 0;\n  }\n}","import Tone from 'tone';\nimport {mapRange} from '../util/util';\n\nexport default class LennySynthAudio {\n  name = null;\n  constructor(name) {\n    if (!name) {\n      throw new Error('CSynth constructor requires a name');\n    }\n    this.name = name;\n\n    this.reverb = new Tone.Freeverb();\n    this.vibrato = new Tone.Vibrato();\n    this.phaser = new Tone.Phaser({\n      frequency: 0.4,\n      octaves: 2,\n      baseFrequency: 200,\n      Q: 18,\n      stages: 20,\n    });\n    this.phaser.wet.value = 1;\n    this.synth = new Tone.PolySynth(6, Tone.MonoSynth)\n      .chain(\n        this.vibrato,\n        this.reverb,\n        this.phaser,\n        new Tone.Limiter(),\n        Tone.Master\n      );\n    this.synth.set({\n      volume: -12,\n      detune: -1200,\n      oscillator: {\n        type: 'triangle'\n      },\n      filterEnvelope: {\n        attack: 0.01,\n        decay: 1,\n        sustain: 1,\n      },\n      filter: {\n        Q: 0\n      }\n    });\n  }\n\n  triggerAttackRelease = (notes, length, time) => {\n    this.synth.triggerAttackRelease(notes, length, time);\n  }\n\n  setReverb = ratio => {\n    // this.reverb.decay = ratio * 8;\n    // this.reverb.wet.value = mapRange(ratio, 0, 1, 0.0, 0.9);\n    this.reverb.roomSize.value = mapRange(ratio, 0, 1, 0.2, 1);\n  }\n\n  setLength = ratio => {\n    this.synth.set({\n      envelope: {\n        release: (ratio * 8) + 0.01\n      },\n      filterEnvelope: {\n        release: (ratio * 80) + 0.01\n      }\n    });\n  }\n\n  setPhaser = state => {\n    if (state) {\n      this.phaser.wet.value = 1\n    } else {\n      this.phaser.wet.value = 0\n    }\n  }\n\n  setVibratoDepth = ratio => {\n    this.vibrato.depth.value = ratio;\n  }\n}\n","\nexport const mapRange = (x, in_min, in_max, out_min, out_max) => {\n  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n}\n\nexport const mapRatioToRange = (x, out_min, out_max) => {\n  const in_min = 0;\n  const in_max = 1;\n  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n}\n\n","import Tone from 'tone';\n// import { notes } from '../redux/config-creators/compositionReducerConfig';\nimport {mapRatioToRange} from '../util/util'\n\nexport default class DrummerAudio {\n  constructor(name, files) {\n    this.name = name;\n    // set up audio files\n    this.urls = files.reduce((acc, file) => {\n      acc[file.index] = file.path\n      return acc;\n    }, {})\n      // setup effects\n    this.filter = new Tone.Filter();\n\n    // create sampler\n    this.synth = new Tone.Players(this.urls)\n    .chain(\n      this.filter,\n      new Tone.Volume(-8),\n      new Tone.Limiter(),\n      Tone.Master\n    );\n  }\n\n  triggerAttackRelease = (notes, length, time) => {\n    // this.synth.triggerAttackRelease(notes, length, time);\n    notes.forEach(note => {\n      if (!this.urls[note]) return;\n      this.synth.get(note).restart(time);\n      this.synth.get(note).start(time);\n    });\n  }\n\n  setFilterFreq = ratio => {\n    // this.filter\n    this.filter.frequency.value = mapRatioToRange(Math.pow(ratio, 2), 0, 10000);\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport CSynth from './audio/CSynth';\nimport BassSynthAudio from './BassSynth/BassSynthAudio';\nimport { \n  subscribeCSynth, \n  subscribeBassSynth, \n  subscribeSequencer,\n  subscribeLennySynth,\n  subscribeDrummer\n} from './redux/subscriptions'\nimport { numSteps } from './redux/config-creators/compositionReducerConfig';\nimport { makeStoreWithSocket } from './socket/configureSocket';\nimport Sequencer from './audio/Sequencer';\nimport LennySynthAudio from './LennySynth/LennySynthAudio';\nimport DrummerAudio from './Drummer/DrummerAudio';\n\n\nexport const sequencer = new Sequencer({ bpm: 85, numSteps });\n\n(async () => {\n\n\n  // setup web sockets to listen for and emit redux actions\n  // need to wait for initial state before creating the store\n  const store = await makeStoreWithSocket();\n\n  const synth1 = new CSynth('synth1');\n  const bass = new BassSynthAudio('bass');\n  const lenny = new LennySynthAudio('lenny');\n  const drummer = new DrummerAudio('drummer', store.getState().drummer.files);\n\n  sequencer.createSequence(synth1);\n  sequencer.createSequence(bass);\n  sequencer.createSequence(lenny);\n  sequencer.createSequence(drummer);\n\n  subscribeCSynth(store, synth1);\n  subscribeBassSynth(store, bass);\n  subscribeLennySynth(store, lenny);\n  subscribeDrummer(store, drummer);\n\n  subscribeSequencer(store, sequencer);\n\n  ReactDOM.render((\n    <Provider store={store}>\n      <App />\n    </Provider>\n  ), document.getElementById('root'));\n\n})();","module.exports = __webpack_public_path__ + \"static/media/kick_02.f5e08c6e.wav\";","module.exports = __webpack_public_path__ + \"static/media/snare_01.16f25651.wav\";","module.exports = __webpack_public_path__ + \"static/media/rim_01.2369df53.wav\";","module.exports = __webpack_public_path__ + \"static/media/shaker_snap_01.689d3025.wav\";","module.exports = __webpack_public_path__ + \"static/media/clap_01.f1089572.wav\";","module.exports = __webpack_public_path__ + \"static/media/short_cymbal_01.b55be721.wav\";","module.exports = __webpack_public_path__ + \"static/media/long_cymbal_01.7a357bf3.wav\";"],"sourceRoot":""}