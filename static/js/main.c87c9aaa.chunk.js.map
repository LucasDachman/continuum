{"version":3,"sources":["util/notes-util.js","redux/config-creators/compositionReducerConfig.js","redux/reducers/synth1Reducer.js","components/util/Dial.jsx","components/Synth1/Synth1.jsx","BassSynth/bassReducer.js","BassSynth/BassSynth.jsx","LennySynth/lennyReducer.js","components/piano-roll/Cell.jsx","components/piano-roll/PianoRoll.jsx","LennySynth/LennySynth.jsx","components/App.jsx","redux/subscriptions.js","redux/reducers/utilReducer.js","redux/reducers/characterReducer.js","redux/store.js","socket/configureSocket.js","audio/Sequence.js","audio/Sequencer.js","index.js","audio/CSynth.js","BassSynth/BassSynthAudio.js","LennySynth/LennySynthAudio.js"],"names":["isBlack","note","color","notes","startNote","endNote","Array","fill","map","_","i","noteNumber","freq","Tone","Frequency","name","toNote","frequency","toFrequency","includes","console","error","generateNotes","createCompositionSliceConfig","initialState","active","reducers","setCompositionCell","state","action","payload","row","col","composition","toggleCompositionCell","compositionReducerConfig","synth1Slice","createSlice","slice","amp","attack","decay","sustain","release","filter","base","range","q","setAmp","Object","entries","key","value","setFilter","actions","memo","onChange","children","className","radius","strokeWidth","r","style","zIndex","mapDispatch","useSetCallback","set","attr","useCallback","v","connect","synth1","id","bassSlice","length","shape","setLength","setShape","setFilterDecay","setFilterRange","setFilterQ","bass","filterDecay","filterRange","filterQ","lennySlice","reverb","setReverb","toggleActions","toggle1","toggleBass","lenny","toggleLenny","dispatch","useDispatch","currentCharacter","useSelector","character","handleClick","e","stopPropagation","cells","join","onClick","cell","mapDispatchToProps","activeColumn","n","rowI","colIndex","useState","isPlaying","setPlaying","audioContextStarted","setAudioContextStarted","currentStep","setCurrentStep","useEffect","startAudioContext","context","then","sequencer","onTick","step","start","stop","resume","subscribe","store","path","callback","watch","getState","get","subscribeCSynth","synth","synthName","setAmpAttack","setAmpDecay","setAmpSustain","setAmpRelease","setFilterAttack","setFilterSustain","setFilterRelease","setFilterBase","subscribeBassSynth","subscribeLennySynth","subscribeSequencer","sequence","rowi","coli","String","raw","addNote","index","removeNote","sequences","utilSlice","message","setMessage","log","characterSlice","setCharacter","makeStore","middleware","configureStore","reducer","synth1Reducer","bassReducer","lennyReducer","util","utilReducer","characterReducer","getDefaultMiddleware","preloadedState","blackList","makeActionEmitter","socket","next","result","type","origin","emit","makeStoreWithSocket","a","io","process","transports","Promise","resolve","on","config","actionEmitter","cb","Sequence","numSteps","chords","frequencyOffset","chord","push","this","Sequencer","bpm","loop","_loopCallback","time","_onTick","values","seq","nextChord","getNotes","triggerAttackRelease","createSequence","Transport","Loop","Draw","schedule","triggerAttack","triggerRelease","ratio","envelope","filterEnvelope","baseFrequency","octaves","Q","Error","PolySynth","MonoSynth","chain","Limiter","Master","volume","oscillator","detune","wet","Reverb","generate","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c87c9aaa.chunk.js","sourcesContent":["import Tone from 'tone';\n\n// helper functions\nexport function isBlack(note) {\n  return note.color === 'black';\n}\n\nexport function isWhite(note) {\n  return note.color === 'white'\n}\n\nexport function generateNotes(startNote = 0, endNote = 127) {\n  if (startNote < 0 || endNote > 127) {\n    console.error('note out of range');\n    return;\n  }\n\n  let notes = new Array(endNote - startNote).fill(0).map((_, i) => i + startNote);\n  notes = notes.map(noteNumber => {\n    const freq = Tone.Frequency(noteNumber, 'midi');\n    const name = freq.toNote();\n    return {\n      name,\n      frequency: freq.toFrequency(),\n      color: name.includes('#') ? 'black' : 'white',\n    }\n  });\n  return notes;\n}","\nimport { generateNotes } from '../../util/notes-util';\n\nexport const numNotes = 24;\nexport const numSteps = 16;\nexport const startNote = 36;\nexport const notes = generateNotes(startNote, startNote + numNotes);\n\nexport const createCompositionSliceConfig = () => ({\n  initialState: new Array(numNotes)\n    .fill(null)\n    .map((_, i) => new Array(numSteps).fill(null)\n      .map(() => ({\n        active: false,\n        note: notes[i],\n      }))\n    ),\n  reducers: {\n    setCompositionCell(state, action) {\n      const { row, col, active } = action.payload;\n      state.composition[row][col].active = active;\n    },\n    toggleCompositionCell(state, action) {\n      const { row, col } = action.payload;\n      state.composition[row][col].active = !state.composition[row][col].active;\n    }\n  }\n});","import { createSlice } from 'redux-starter-kit';\nimport { createCompositionSliceConfig } from '../config-creators/compositionReducerConfig';\n\nconst compositionReducerConfig = createCompositionSliceConfig();\n\nconst synth1Slice = createSlice({\n  slice: 'synth1',\n  initialState: {\n    amp: {\n      attack: 0,\n      decay: 0.5,\n      sustain: 1,\n      release: 0.2\n    },\n    filter: {\n      attack: 0,\n      decay: 0.5,\n      sustain: 1,\n      release: 0.2,\n      base: 0,\n      range: 0.5,\n      q: 0,\n    },\n    composition: compositionReducerConfig.initialState\n  },\n  reducers: {\n    setAmp(state, action) {\n      // allow for setting arbitrary values\n      for (let [key, value] of Object.entries(action.payload)) {\n        state.amp[key] = value;\n      }\n    },\n    setFilter(state, action) {\n      // allow for setting arbitrary values\n      for (let [key, value] of Object.entries(action.payload)) {\n        state.filter[key] = value;\n      }\n    },\n    ...compositionReducerConfig.reducers\n  }\n});\n\nexport const { setAmp, setFilter, setCompositionCell, toggleCompositionCell } = synth1Slice.actions;\nexport default synth1Slice.reducer;","import React, { memo } from 'react';\n\nimport {\n  CircularInput,\n  CircularTrack,\n  CircularProgress,\n  CircularThumb,\n} from 'react-circular-input'\n\nconst Dial = ({ value, onChange, children }) => {\n\n  return (\n    <div className='knob'>\n      <div>\n        <CircularInput radius={18}\n          value={value}\n          onChange={onChange}>\n          <CircularTrack strokeWidth={8} />\n          <CircularProgress strokeWidth={8} />\n          <CircularThumb r='6' />\n        </CircularInput>\n      </div>\n      <div style={{ zIndex: -1 }}>{children}</div>\n    </div>\n  );\n}\n\nexport default memo(Dial);","import React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport { setAmp, setFilter } from '../../redux/reducers/synth1Reducer';\nimport Dial from '../util/Dial';\n\nconst mapDispatch = {\n  setAmp,\n  setFilter,\n};\n\nconst mapStateToProps = state => ({\n  amp: state.synth1.amp,\n  filter: state.synth1.filter,\n});\n\nconst useSetCallback = (set, attr) => {\n  return useCallback(v => set({ [attr]: v }), [set, attr]);\n}\n\nconst Synth1 = ({ setAmp, setFilter, amp, filter }) => {\n\n  // actual render code\n  return (\n    <>\n    <h2>Synth 1</h2>\n    <div className='synth-1 synth'>\n      <section id='amp-env'>\n        <div className='knob-row knob-row-vertical'>\n          <h4>Amp</h4>\n          <Dial\n            value={amp.attack}\n            onChange={useSetCallback(setAmp, 'attack')} >\n            Attack\n          </Dial>\n          <Dial\n            value={amp.decay}\n            onChange={useSetCallback(setAmp, 'decay')} >\n            Decay\n          </Dial>\n          <Dial\n            value={amp.sustain}\n            onChange={useSetCallback(setAmp, 'sustain')} >\n            Sustain\n          </Dial>\n          <Dial\n            value={amp.release}\n            onChange={useSetCallback(setAmp, 'release')} >\n            Release\n          </Dial>\n        </div>\n      </section>\n      <section id='filter-env'>\n        <div className='knob-row knob-row-vertical'>\n          <h4>Filter</h4>\n          <Dial\n            value={filter.attack}\n            onChange={useSetCallback(setFilter, 'attack')} >\n            Attack\n          </Dial>\n          <Dial\n            value={filter.decay}\n            onChange={useSetCallback(setFilter, 'decay')} >\n            Decay\n          </Dial>\n          <Dial\n            value={filter.sustain}\n            onChange={useSetCallback(setFilter, 'sustain')} >\n            Sustain\n          </Dial>\n          <Dial\n            value={filter.release}\n            onChange={useSetCallback(setFilter, 'release')} >\n            Release\n          </Dial>\n        </div>\n        <div className='knob-row knob-row-vertical'>\n          <Dial\n            value={filter.base}\n            onChange={useSetCallback(setFilter, 'base')} >\n            Base\n          </Dial>\n          <Dial\n            value={filter.range}\n            onChange={useSetCallback(setFilter, 'range')} >\n            Range\n          </Dial>\n          <Dial\n            value={filter.q}\n            onChange={useSetCallback(setFilter, 'q')} >\n            Q\n          </Dial>\n        </div>\n      </section>\n    </div>\n    </>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatch\n)(Synth1);\n","import { createSlice } from 'redux-starter-kit';\nimport { createCompositionSliceConfig } from '../redux/config-creators/compositionReducerConfig';\n\nconst compositionReducerConfig = createCompositionSliceConfig();\n\nconst bassSlice = createSlice({\n  slice: 'bass',\n  initialState: {\n    length: 0.07,\n    shape: 0,\n    filter: {\n      decay: 0.5,\n      range: 0.3769,\n      q: 0.1,\n    },\n    composition: compositionReducerConfig.initialState\n  },\n  reducers: {\n    ...compositionReducerConfig.reducers,\n    setLength(state, action) {\n      state.length = action.payload;\n    },\n    setShape(state, action) {\n      state.shape = action.payload;\n    },\n    setFilterDecay(state, action) {\n      state.filter.decay = action.payload;\n    },\n    setFilterRange(state, action) {\n      state.filter.range = action.payload;\n    },\n    setFilterQ(state, action) {\n      state.filter.q = action.payload;\n    },\n  }\n});\n\nexport const {\n  setCompositionCell,\n  toggleCompositionCell,\n  setLength,\n  setShape,\n  setFilterDecay,\n  setFilterRange,\n  setFilterQ,\n} = bassSlice.actions;\nexport default bassSlice.reducer;","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  setCompositionCell,\n  setLength,\n  setShape,\n  setFilterDecay,\n  setFilterRange,\n  setFilterQ\n} from './bassReducer';\nimport Dial from '../components/util/Dial';\n\nconst mapDispatch = {\n  setCompositionCell,\n  setLength,\n  setShape,\n  setFilterDecay,\n  setFilterRange,\n  setFilterQ\n};\n\nconst mapStateToProps = state => ({\n  length: state.bass.length,\n  shape: state.bass.shape,\n  filterDecay: state.bass.filter.decay,\n  filterRange: state.bass.filter.range,\n  filterQ: state.bass.filter.q,\n});\n\nconst BassSynth = ({\n  setLength,\n  setShape,\n  setFilterDecay,\n  setFilterRange,\n  setFilterQ,\n  length,\n  shape,\n  filterDecay,\n  filterRange,\n  filterQ,\n}) => {\n\n  // actual render code\n  return (\n    <div className='bass-synth synth'>\n      <h2>Bass Synth</h2>\n      <div className='knob-row knob-row-horizontal'>\n        <Dial\n          value={length}\n          onChange={setLength} >\n          Length\n        </Dial>\n        <Dial\n          value={shape}\n          onChange={setShape} >\n          Shape\n        </Dial>\n        <Dial\n          value={filterDecay}\n          onChange={setFilterDecay} >\n          Decay\n        </Dial>\n        <Dial\n          value={filterRange}\n          onChange={setFilterRange} >\n          Brightness\n        </Dial>\n        <Dial\n          value={filterQ}\n          onChange={setFilterQ} >\n          Harshness\n        </Dial>\n      </div>\n    </div >\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatch\n)(BassSynth);\n","import { createSlice } from 'redux-starter-kit';\nimport { createCompositionSliceConfig } from '../redux/config-creators/compositionReducerConfig';\n\nconst compositionReducerConfig = createCompositionSliceConfig();\n\nconst lennySlice = createSlice({\n  slice: 'lenny',\n  initialState: {\n    reverb: 0,\n    composition: compositionReducerConfig.initialState\n  },\n  reducers: {\n    ...compositionReducerConfig.reducers,\n    setReverb(state, action) {\n      state.reverb = action.payload;\n    }\n  }\n});\n\nexport const {\n  setCompositionCell,\n  toggleCompositionCell,\n  setReverb\n} = lennySlice.actions\nexport default lennySlice.reducer;\n\n","import React, { useCallback, memo, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  toggleCompositionCell as toggle1\n} from '../../redux/reducers/synth1Reducer';\nimport {\n  toggleCompositionCell as toggleBass\n} from '../../BassSynth/bassReducer';\nimport {\n  toggleCompositionCell as toggleLenny\n} from '../../LennySynth/lennyReducer';\nimport { isBlack } from '../../util/notes-util';\nimport _ from 'lodash'\n\nconst toggleActions = {\n  synth1: toggle1,\n  bass: toggleBass,\n  lenny: toggleLenny\n};\n\nconst Cell = ({ row, col }) => {\n  const dispatch = useDispatch();\n\n  const currentCharacter = useSelector(state => state.character.character);\n\n  const handleClick = useCallback((e) => {\n    e.stopPropagation();\n    dispatch(toggleActions[currentCharacter]({ row, col }));\n  }, [row, col, currentCharacter, dispatch]);\n\n  const cells = {\n    synth1: useSelector(state => state.synth1.composition[row][col]),\n    bass: useSelector(state => state.bass.composition[row][col]),\n    lenny: useSelector(state => state.lenny.composition[row][col])\n  };\n\n  const black = isBlack(cells[currentCharacter].note);\n  const className = ['piano-cell',\n    black ? 'black' : 'white',\n  ].join(' ');\n\n  return (\n    <>\n      <span className={className} onClick={handleClick} >\n        {\n          _.map(cells, (cell, character) => {\n            return (cell.active &&\n              <span\n                key={character}\n                onClick={handleClick}\n                className={`cell-trigger cell-trigger-${character}`}\n              />)\n          })\n        }\n      </span>\n    </>\n  );\n}\n\nexport default memo(Cell);","import React from 'react';\nimport Cell from './Cell';\nimport { isBlack } from '../../util/notes-util';\nimport { setCompositionCell } from '../../redux/reducers/synth1Reducer';\nimport { notes } from '../../redux/config-creators/compositionReducerConfig';\nimport { connect } from 'react-redux';\nimport './piano-roll.css';\n\nconst mapStateToProps = state => ({\n  composition: state.synth1.composition,\n});\n\nconst mapDispatchToProps = {\n  setCompositionCell\n}\n\nconst PianoRoll = ({ activeColumn, composition }) => {\n\n  return (\n    <div className='piano-roll'>\n      <section className='piano-roll-keys'>\n        {notes.map((n) => {\n          const className = ['piano-key', isBlack(n) ? 'black' : 'white'].join(' ');\n          return (\n            <div\n              className={className}\n              key={n.name}>\n              <p>{n.name}</p>\n            </div>\n          );\n        })}\n      </section>\n      <section className='piano-roll-editor'>\n        {\n          notes.map((n, rowI) =>\n            <section key={rowI} className={`step-row ${isBlack(n) ? 'black' : 'white'}`}>\n              {\n                composition[rowI].map((cell, colIndex) =>\n                  <Cell\n                    key={`${rowI}, ${colIndex}`}\n                    row={rowI}\n                    col={colIndex}\n                  />\n                )\n              }\n            </section>\n          )\n        }\n      </section>\n    </div>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PianoRoll);","import React from 'react';\nimport { connect } from 'react-redux';\nimport Dial from '../components/util/Dial.jsx';\nimport {\n  setReverb\n} from './lennyReducer';\n\nconst mapStateToProps = state => ({\n  reverb: state.lenny.reverb\n});\n\nconst mapDispatchToProps = {\n  setReverb\n};\n\nconst LennySynth = ({\n  reverb,\n  setReverb\n}) => {\n  return (\n    <div className='lenny-synth synth'>\n      <h2>Lenny</h2>\n      <div className='knob-row knob-row-horizontal'>\n        <Dial\n          value={reverb}\n          onChange={setReverb} >\n          Reverb\n        </Dial>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LennySynth);","import React, { useState, useEffect } from 'react';\nimport Synth1 from './Synth1/Synth1';\nimport BassSynth from '../BassSynth/BassSynth.jsx';\nimport PianoRoll from './piano-roll/PianoRoll.jsx';\nimport Tone from 'tone';\nimport startAudioContext from 'startaudiocontext';\nimport './App.css';\nimport { sequencer } from '../index';\nimport { connect } from 'react-redux';\nimport LennySynth from '../LennySynth/LennySynth';\n\nconst mapStateToProps = state => ({\n  character: state.character.character\n});\n\nconst App = ({ character }) => {\n  const [isPlaying, setPlaying] = useState(false);\n  const [audioContextStarted, setAudioContextStarted] = useState(false);\n  const [currentStep, setCurrentStep] = useState(0);\n\n  const handlePlay = () => {\n    Tone.context.resume();\n    setPlaying(!isPlaying)\n  }\n\n  // runs once after first render\n  useEffect(() => {\n    // wait for audio context to start before rendering\n    startAudioContext(Tone.context).then(() => {\n      setAudioContextStarted(true);\n    });\n\n    // callback for sequencer1\n    sequencer.onTick = step => {\n      setCurrentStep(step);\n    }\n  }, []);\n\n  useEffect(() => {\n    isPlaying ? sequencer.start() : sequencer.stop();\n  }, [isPlaying])\n\n  return !audioContextStarted ? 'Click' : (\n    <main>\n      <section id='control-panel'>\n        <p>You are: {character}</p>\n        <button id='play-button'\n          onClick={handlePlay}\n        >\n          {isPlaying ? 'Stop' : 'Play'}\n        </button>\n      </section>\n      <Synth1 />\n      <BassSynth />\n      <LennySynth />\n      <section id='sequencer'>\n        <PianoRoll currentStep={currentStep} />\n      </section>\n    </main>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(App);","// import store from './store';\nimport watch from 'redux-watch';\nimport { get } from 'object-path';\n\n// use redux-watch to subscribe to a certain store value\n// and use the callback to set the initial value\nconst subscribe = (store, path, callback) => {\n  store.subscribe(watch(store.getState, path)(callback));\n  callback(get(store.getState(), path));\n}\n\nexport function subscribeCSynth(store, synth) {\n  const synthName = synth.name;\n  subscribe(store, `${synthName}.amp.attack`, synth.setAmpAttack);\n  subscribe(store, `${synthName}.amp.decay`, synth.setAmpDecay);\n  subscribe(store, `${synthName}.amp.sustain`, synth.setAmpSustain);\n  subscribe(store, `${synthName}.amp.release`, synth.setAmpRelease);\n\n  subscribe(store, `${synthName}.filter.attack`, synth.setFilterAttack);\n  subscribe(store, `${synthName}.filter.decay`, synth.setFilterDecay);\n  subscribe(store, `${synthName}.filter.sustain`, synth.setFilterSustain);\n  subscribe(store, `${synthName}.filter.release`, synth.setFilterRelease);\n  subscribe(store, `${synthName}.filter.base`, synth.setFilterBase);\n  subscribe(store, `${synthName}.filter.range`, synth.setFilterRange);\n  subscribe(store, `${synthName}.filter.q`, synth.setFilterQ);\n}\n\nexport function subscribeBassSynth(store, synth) {\n  const synthName = synth.name;\n  subscribe(store, `${synthName}.length`, synth.setLength)\n  subscribe(store, `${synthName}.shape`, synth.setShape);\n  subscribe(store, `${synthName}.filter.decay`, synth.setFilterDecay);\n  subscribe(store, `${synthName}.filter.range`, synth.setFilterRange);\n  subscribe(store, `${synthName}.filter.q`, synth.setFilterQ);\n}\n\nexport function subscribeLennySynth(store, synth) {\n  const synthName = synth.name;\n  subscribe(store, `${synthName}.reverb`, synth.setReverb);\n}\n\nexport function subscribeSequencer(store, sequencer) {\n  // subscribe each sequence to it's corresponding composition in the redux store\n  for (const [synthName, sequence] of Object.entries(sequencer.sequences)) {\n    const { composition } = store.getState()[synthName];\n    // subscribe to each cell in the matrix\n    for (const [rowi, row] of composition.entries()) {\n      for (const [coli, cell] of row.entries()) {\n        const path = String.raw`${synthName}.composition.${rowi}.${coli}.active`;\n        subscribe(store, path, active => {\n          if (active) {\n            sequence.addNote({ index: coli, freq: cell.note.frequency });\n          } else {\n            sequence.removeNote({ index: coli, freq: cell.note.frequency });\n          }\n        });\n      }\n    }\n  }\n}","import { createSlice } from 'redux-starter-kit';\n\nconst utilSlice = createSlice({\n  initialState: {\n    message: 'Hello, World'\n  },\n  reducers: {\n    setMessage(state, action) {\n      console.log('change to ', action.payload);\n      state.message = action.payload;\n    }\n  }\n});\n\nexport const { setMessage } = utilSlice.actions;\nexport default utilSlice.reducer;","import { createSlice } from 'redux-starter-kit';\n\nconst characterSlice = createSlice({\n  initialState: {\n    character: null,\n  },\n  reducers: {\n    setCharacter(state, action) {\n      state.character = action.payload.character;\n    }\n  }\n});\n\nexport const { setCharacter } = characterSlice.actions;\nexport default characterSlice.reducer;","import { configureStore, getDefaultMiddleware } from 'redux-starter-kit';\nimport synth1Reducer from './reducers/synth1Reducer';\nimport bassReducer from '../BassSynth/bassReducer';\nimport lennyReducer from '../LennySynth/lennyReducer'\nimport utilReducer from './reducers/utilReducer';\nimport characterReducer from './reducers/characterReducer';\n\nconst makeStore = (middleware = [], initialState) => {\n  return configureStore({\n    reducer: {\n      synth1: synth1Reducer,\n      bass: bassReducer,\n      lenny: lennyReducer,\n      util: utilReducer,\n      character: characterReducer,\n    },\n    middleware: [...getDefaultMiddleware(), ...middleware],\n    ...initialState && { preloadedState: initialState }\n  });\n};\n\nexport default makeStore;","import io from 'socket.io-client';\nimport makeStore from '../redux/store';\nimport { setCharacter } from '../redux/reducers/characterReducer';\n\nconst blackList = [\n  'setCharacter'\n]\n\nconst makeActionEmitter = socket => store => next => action => {\n  const result = next(action);\n  if (!(blackList.includes(action.type)) && !action.origin) {\n    socket.emit('action', { ...action, origin: socket.id });\n  }\n  return result;\n}\n\nexport const makeStoreWithSocket = async () => {\n  const socket = io(process.env.REACT_APP_SERVER_URI, { transports: ['websocket'] });\n\n  let character;\n  // wait for initial state from server before creating store\n  const initialState = await new Promise(resolve => {\n    socket.on('init', config => {\n      console.log(config);\n      console.log('You are player ', config.character);\n      character = config.character;\n      resolve(config.state);\n    });\n  });\n\n  const actionEmitter = makeActionEmitter(socket);\n  const store = makeStore([actionEmitter], initialState)\n\n  store.dispatch(setCharacter({ character }))\n\n  socket.on('action', action => {\n    store.dispatch(action);\n  });\n\n  socket.on('GET_STATE', (_, cb) => {\n    const { character, ...rest } = store.getState();\n    cb(rest);\n  });\n\n  return store;\n}\n","export default class Sequence {\n\n  chords = []\n  synth = null;\n  frequencyOffset = 0;\n\n  constructor(synth, numSteps) {\n    this.synth = synth;\n    this.chords = new Array(numSteps)\n      .fill(null).map(v => []);\n  }\n\n  getNotes(step) {\n    let chord = this.chords[step] || [];\n    return chord.map(note => note + this.frequencyOffset * 10);;\n  }\n\n  addNote = ({ index, freq }) => {\n    const chord = this.chords[index];\n    if (!chord.includes(freq)) {\n      chord.push(freq);\n    }\n  }\n\n  removeNote = ({ index, freq }) => {\n    this.chords[index] = this.chords[index].filter(value => value !== freq);\n  }\n\n}","import Tone from 'tone';\nimport Sequence from './Sequence';\n\nexport default class Sequencer {\n\n  step = 0;\n  numSteps = 0;\n  onTick = null;\n  loop = null;\n  sequences = {};\n\n  constructor({ bpm, numSteps }) {\n    this.numSteps = numSteps;\n    Tone.Transport.bpm.value = bpm;\n    Tone.Transport.start();\n    this.loop = new Tone.Loop(this._loopCallback, '16n');\n  }\n\n  _loopCallback = (time) => {\n    // UI callback\n    this._onTick(time, this.step);\n    // trigger notes for each sequence\n    for (const seq of Object.values(this.sequences)) {\n      const nextChord = seq.getNotes(this.step)\n      nextChord.length > 0 &&\n        seq.synth.triggerAttackRelease(nextChord, '16n', time);\n    }\n    this.step++;\n    if (this.step >= this.numSteps) this.step = 0;\n  }\n\n  _onTick(time, step) {\n    if (!this.onTick) return;\n    Tone.Draw.schedule(() => {\n      this.onTick(step);\n    }, time + 0.1)\n  }\n\n  createSequence = (synth) => {\n    this.sequences[synth.name] = new Sequence(synth, this.numSteps);\n  }\n\n  start = () => {\n    Tone.context.resume();\n    this.loop.start();\n  }\n\n  stop = () => {\n    this.loop.stop();\n    this.step = 0;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport CSynth from './audio/CSynth';\nimport BassSynthAudio from './BassSynth/BassSynthAudio';\nimport { \n  subscribeCSynth, \n  subscribeBassSynth, \n  subscribeSequencer,\n  subscribeLennySynth\n} from './redux/subscriptions'\nimport { numSteps } from './redux/config-creators/compositionReducerConfig';\nimport { makeStoreWithSocket } from './socket/configureSocket';\nimport Sequencer from './audio/Sequencer';\nimport LennySynthAudio from './LennySynth/LennySynthAudio';\n\n\nconst tickTime = 170;\nconst synth1 = new CSynth('synth1');\nconst bass = new BassSynthAudio('bass');\nconst lenny = new LennySynthAudio('lenny');\nexport const sequencer = new Sequencer({ bpm: tickTime, numSteps })\n\nsequencer.createSequence(synth1);\nsequencer.createSequence(bass);\nsequencer.createSequence(lenny);\n\n(async () => {\n\n  // setup web sockets to listen for and emit redux actions\n  // need to wait for initial state before creating the store\n  const store = await makeStoreWithSocket();\n\n  subscribeCSynth(store, synth1);\n  subscribeBassSynth(store, bass);\n  subscribeLennySynth(store, lenny);\n  subscribeSequencer(store, sequencer);\n\n  ReactDOM.render((\n    <Provider store={store}>\n      <App />\n    </Provider>\n  ), document.getElementById('root'));\n\n})();","import Tone from 'tone';\n\nexport default class CSynth {\n  name = null;\n  constructor(name) {\n    if (!name) {\n      throw new Error('CSynth constructor requires a name');\n    }\n    this.name = name;\n    this.synth = new Tone.PolySynth(6, Tone.MonoSynth)\n      .chain(\n        new Tone.Limiter(),\n        Tone.Master\n      );\n    this.synth.set({\n      volume: -12,\n      oscillator: {\n        type: 'sawtooth'\n      },\n    });\n  }\n\n  triggerAttack = (frequency) => {\n    this.synth.triggerAttack(frequency);\n  }\n\n  triggerRelease = (frequency) => {\n    this.synth.triggerRelease(frequency);\n  }\n\n  triggerAttackRelease = (notes, length, time) => {\n    this.synth.triggerAttackRelease(notes, length, time);\n  }\n\n  setAmpAttack = (ratio) => {\n    this.synth.set({\n      envelope: {\n        attack: ratio + 0.01\n      }\n    });\n  }\n\n  setAmpDecay = (ratio) => {\n    this.synth.set({\n      envelope: {\n        decay: ratio + 0.01\n      }\n    });\n  }\n\n  setAmpSustain = (ratio) => {\n    this.synth.set({\n      envelope: {\n        sustain: ratio\n      }\n    });\n  }\n\n  setAmpRelease = (ratio) => {\n    this.synth.set({\n      envelope: {\n        release: (ratio * 10) + 0.01\n      }\n    });\n  }\n\n  setFilterAttack = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        attack: (ratio / 5) + 0.01\n      }\n    });\n  }\n\n  setFilterDecay = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        decay: ratio + 0.01\n      }\n    });\n  }\n\n  setFilterSustain = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        sustain: ratio\n      }\n    });\n  }\n\n  setFilterRelease = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        release: (ratio * 100) + 0.01\n      }\n    });\n  }\n\n  setFilterBase = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        baseFrequency: (ratio * 500) + 1\n      }\n    });\n  }\n\n  setFilterRange = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        octaves: ratio * 20\n      }\n    });\n  }\n\n  setFilterQ = (ratio) => {\n    this.synth.set({\n      filter: {\n        Q: ratio * 10\n      }\n    })\n  }\n}","import Tone from 'tone';\n\nexport default class BassSynthAudio {\n  name = null;\n  constructor(name) {\n    if (!name) {\n      throw new Error('CSynth constructor requires a name');\n    }\n    this.name = name;\n    this.synth = new Tone.PolySynth(1, Tone.MonoSynth)\n      .chain(\n        new Tone.Limiter(),\n        Tone.Master\n      );\n    this.synth.set({\n      volume: -12,\n      detune: -1200,\n      oscillator: {\n        type: 'sawtooth'\n      },\n      envelope: {\n        attack: 0.01,\n        sustain: 1,\n        decay: 0.05\n      },\n      filter: {\n        baseFrequency: 6,\n      },\n      filterEnvelope: {\n        sustain: 0.47415415352178325,\n      }\n    });\n  }\n\n  triggerAttack = (frequency) => {\n    this.synth.triggerAttack(frequency);\n  }\n\n  triggerRelease = (frequency) => {\n    this.synth.triggerRelease(frequency);\n  }\n\n  triggerAttackRelease = (notes, length, time) => {\n    this.synth.triggerAttackRelease(notes, length, time);\n  }\n\n  setLength = ratio => {\n    this.synth.set({\n      envelope: {\n        release: (ratio * 10) + 0.01\n      },\n      filterEnvelope: {\n        release: (ratio * 100) + 0.01\n      }\n    })\n  }\n\n  setShape = ratio => {\n    this.synth.set({\n      filterEnvelope: {\n        attack: (ratio / 5) + 0.01\n      }\n    });\n  }\n\n  setFilterDecay = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        decay: ratio + 0.01\n      }\n    });\n  }\n\n  setFilterRange = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        octaves: ratio * 20\n      }\n    });\n  }\n\n  setFilterQ = (ratio) => {\n    this.synth.set({\n      filter: {\n        Q: ratio * 10\n      }\n    })\n  }\n}","import Tone from 'tone';\n\nexport default class LennySynthAudio {\n  name = null;\n  constructor(name) {\n    if (!name) {\n      throw new Error('CSynth constructor requires a name');\n    }\n    this.name = name;\n\n    this.reverb = new Tone.Reverb();\n    this.reverb.decay = 8;\n    this.reverb.generate();\n    this.synth = new Tone.PolySynth(6, Tone.MonoSynth)\n      .chain(\n        this.reverb,\n        new Tone.Limiter(),\n        Tone.Master\n      );\n    this.synth.set({\n      volume: -12,\n      detune: 1200,\n      oscillator: {\n        type: 'triangle'\n      },\n      filterEnvelope: {\n        attack: 0.01,\n        decay: 1,\n        sustain: 1,\n      },\n      filter: {\n        Q: 0\n      }\n    });\n  }\n\n  triggerAttackRelease = (notes, length, time) => {\n    this.synth.triggerAttackRelease(notes, length, time);\n  }\n\n  setReverb = ratio => {\n    // this.reverb.decay = ratio * 8;\n    // this.reverb.wet.value = mapRange(ratio, 0, 1, 0.0, 0.9);\n    this.reverb.wet.value = ratio;\n  }\n\n}\n\nconst mapRange = (x, in_min, in_max, out_min, out_max) => {\n  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n}\n"],"sourceRoot":""}