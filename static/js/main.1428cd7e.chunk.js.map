{"version":3,"sources":["util/notes-util.js","redux/config-creators/compositionReducerConfig.js","BassSynth/bassReducer.js","components/util/DialIndicator.jsx","components/util/Dial.jsx","BassSynth/BassSynth.jsx","redux/reducers/synth1Reducer.js","LennySynth/lennyReducer.js","components/piano-roll/Cell.jsx","components/piano-roll/PianoRoll.jsx","Drummer/drummerReducer.js","components/piano-roll/DrumCell.jsx","components/piano-roll/DrumSequencer.jsx","LennySynth/LennySynth.jsx","Drummer/Drummer.jsx","components/App.jsx","audio/CSynth.js","BassSynth/BassSynthAudio.js","redux/subscriptions.js","redux/reducers/utilReducer.js","redux/reducers/characterReducer.js","redux/store.js","socket/configureSocket.js","audio/Sequence.js","audio/Sequencer.js","util/util.js","LennySynth/LennySynthAudio.js","Drummer/DrummerAudio.js","index.js","audio-files/kicks/kick_02.wav","audio-files/snares/snare_01.wav","audio-files/rims/rim_01.wav","audio-files/shaker_snaps/shaker_snap_01.wav","audio-files/claps/clap_01.wav","audio-files/short_cymbals/short_cymbal_01.wav","audio-files/long_cymbals/long_cymbal_01.wav"],"names":["midiToNote","noteNumber","freq","Tone","Frequency","name","toNote","frequency","toFrequency","color","includes","midi","octaveNotes","notes","scale","map","toMidi","createCompositionSliceConfig","initialState","range","i","active","note","keyIndex","reducers","setCompositionCell","state","action","payload","row","col","composition","toggleCompositionCell","transpose","semitones","cell","compositionReducerConfig","bassSlice","createSlice","slice","length","shape","filter","decay","q","setLength","setShape","setFilterDecay","setFilterRange","setFilterQ","actions","DialIndicator","strokeWidth","stroke","useCircularInputContext","getPointFromValue","center","x","y","ref","useRef","useCircularDrag","x1","y1","x2","y2","cx","cy","r","opacity","memo","value","onChange","children","disabled","handleChange","useCallback","throttle","v","char","useSelector","character","textColor","mainColor","className","radius","strokeLinecap","style","transition","zIndex","mapDispatch","connect","bass","filterDecay","filterRange","filterQ","currentCharacter","synth1Slice","amp","attack","sustain","release","base","setAmp","Object","entries","key","setFilter","lennySlice","reverb","phaser","vibratoDepth","setReverb","setPhaser","setVibratoDepth","toggleActions","synth1","toggle1","toggleBass","lenny","toggleLenny","playing","dispatch","useDispatch","handleClick","e","stopPropagation","Boolean","cells","onClick","_","cn","PianoRoll","currentStep","n","rowNum","colNum","files","kick","snare","rim","shakerSnap","clap","shortCymbal","longCymbal","path","match","index","String","compositionSliceConfig","drummerSlice","filterFreq","delay","setFilterFreq","setDelay","toggleDrummer","drummer","isDrummer","DrumSequencer","drumFiles","DrumCell","mapDispatchToProps","type","checked","target","useState","setCurrentStep","tonic","setTonic","setScale","handleTonicChange","handleScaleChange","useEffect","sequencer","onTick","step","id","CSynth","triggerAttack","synth","triggerRelease","triggerAttackRelease","time","setAmpAttack","ratio","set","envelope","setAmpDecay","setAmpSustain","setAmpRelease","setFilterAttack","filterEnvelope","setFilterSustain","setFilterRelease","setFilterBase","baseFrequency","octaves","Q","Error","this","PolySynth","MonoSynth","chain","Limiter","Master","volume","oscillator","BassSynthAudio","detune","subscribe","store","callback","watch","getState","get","subscribeCSynth","synthName","subscribeBassSynth","subscribeLennySynth","subscribeDrummer","subscribeSequencer","sequence","rowi","coli","raw","addNote","removeNote","sequences","utilSlice","message","startTime","nextInterval","setMessage","console","log","setStartTime","setNextInterval","characterSlice","setCharacter","makeStore","middleware","configureStore","reducer","synth1Reducer","bassReducer","lennyReducer","drummerReducer","util","utilReducer","characterReducer","getDefaultMiddleware","preloadedState","blackList","charOverride","process","REACT_APP_CHAR","makeActionEmitter","socket","next","result","origin","emit","makeStoreWithSocket","a","io","transports","Promise","resolve","on","config","actionEmitter","cb","charactersById","Sequence","numSteps","chords","frequencyOffset","chord","push","Array","fill","Sequencer","bpm","loop","_loopCallback","_onTick","values","seq","nextChord","getNotes","createSequence","start","context","resume","stop","Transport","Loop","humanize","onLoop","Draw","schedule","Date","now","mapRatioToRange","out_min","out_max","LennySynthAudio","in_min","roomSize","wet","vibrato","depth","Freeverb","Vibrato","Phaser","stages","DrummerAudio","forEach","urls","restart","Math","pow","feedback","clamp","reduce","acc","file","Filter","FeedbackDelay","Players","Volume","document","getElementById","innerHTML","startAudioContext","setTimeout","ReactDOM","render","module","exports"],"mappings":"6QA4BO,IAAMA,EAAa,SAAAC,GACxB,IAAMC,EAAOC,IAAKC,UAAUH,EAAY,QAClCI,EAAOH,EAAKI,SAClB,MAAO,CACLD,OACAE,UAAWL,EAAKM,cAChBC,MAAOJ,EAAKK,SAAS,KAAO,QAAU,QACtCC,KAAMV,IAcGW,EAAc,CAAC,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,K,wBCvC3EC,EAAQ,sBAAIC,YAAM,YAAYD,OAAtB,YAAgCC,YAAM,YAAYD,QAAOE,ID6BpD,SAAAV,GACxB,IAAMH,EAAOC,IAAKC,UAAUC,EAAM,QAClC,MAAO,CACLA,OACAE,UAAWL,EAAKM,cAChBC,MAAOJ,EAAKK,SAAS,KAAO,QAAU,QACtCC,KAAMT,EAAKc,YCjCFC,EAA+B,iBAAO,CACjDC,aAAcC,gBARQ,IASnBJ,IAAI,SAAAK,GAAC,OACJD,gBATkB,IAUfJ,IAAI,iBAAO,CACVM,QAAQ,EACRC,KAAMT,EAAMO,GACZG,SAAUH,OAGlBI,SAAU,CACRC,mBADQ,SACWC,EAAOC,GAAS,IAAD,EACHA,EAAOC,QAA5BC,EADwB,EACxBA,IAAKC,EADmB,EACnBA,IAAKT,EADc,EACdA,OAClBK,EAAMK,YAAYF,GAAKC,GAAKT,OAASA,GAEvCW,sBALQ,SAKcN,EAAOC,GAAS,IAAD,EACdA,EAAOC,QAApBC,EAD2B,EAC3BA,IAAKC,EADsB,EACtBA,IACbJ,EAAMK,YAAYF,GAAKC,GAAKT,QAAUK,EAAMK,YAAYF,GAAKC,GAAKT,QAEpEY,UATQ,SASEP,EAAOC,GAAS,IAChBO,EAAcP,EAAOC,QAArBM,UACRR,EAAMK,YAAcL,EAAMK,YACvBhB,IAAI,SAAAc,GAAG,OAAIA,EAAId,IAAI,SAAAoB,GAAI,OAAInC,EAAWmC,EAAKxB,KAAOuB,W,4NC/B3D,IAAME,EAA2BnB,IAE3BoB,EAAYC,YAAY,CAC5BC,MAAO,OACPrB,aAAc,CACZsB,OAAQ,IACRC,MAAO,EACPC,OAAQ,CACNC,MAAO,GACPxB,MAAO,MACPyB,EAAG,IAELb,YAAaK,EAAyBlB,cAExCM,S,qVAAS,CAAD,GACHY,EAAyBZ,SADtB,CAENqB,UAFO,SAEGnB,EAAOC,GACfD,EAAMc,OAASb,EAAOC,SAExBkB,SALO,SAKEpB,EAAOC,GACdD,EAAMe,MAAQd,EAAOC,SAEvBmB,eARO,SAQQrB,EAAOC,GACpBD,EAAMgB,OAAOC,MAAQhB,EAAOC,SAE9BoB,eAXO,SAWQtB,EAAOC,GACpBD,EAAMgB,OAAOvB,MAAQQ,EAAOC,SAE9BqB,WAdO,SAcIvB,EAAOC,GAChBD,EAAMgB,OAAOE,EAAIjB,EAAOC,a,EAa1BS,EAAUa,QAPZzB,E,EAAAA,mBACAO,E,EAAAA,sBACAa,E,EAAAA,UACAC,E,EAAAA,SACAC,E,EAAAA,eACAC,E,EAAAA,eACAC,E,EAAAA,WAEaZ,IAAf,Q,OCzBec,EAfO,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,OAAY,EACTC,oCAA9BC,EADuC,EACvCA,kBAAmBC,EADoB,EACpBA,OADoB,EAE5BD,IAAXE,EAFuC,EAEvCA,EAAGC,EAFoC,EAEpCA,EAELC,EAAMC,iBAAO,MAGnB,OAFAC,0BAAgBF,GAET,2BACL,0BAAMG,GAAIN,EAAOC,EAAGM,GAAIP,EAAOE,EAAGM,GAAIP,EAAGQ,GAAIP,EAAGL,OAAQA,EAAQD,YAAaA,IAE7E,4BAAQO,IAAKA,EAAKO,GAAIT,EAAGU,GAAIT,EAAGU,EAAG,GAAIf,OAAO,QAAQgB,QAAS,MCqBpDC,iBA1BF,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAEnCC,EAAeC,sBAAYC,mBAAS,SAAAC,GACxCN,EAASM,IACR,KAAM,CAACN,IAEJO,EAAOC,YAAY,SAAAtD,GAAK,OAAIA,EAAMuD,UAAUA,YAC5CC,EAAYR,EAAW,YAAc,QACrCS,EAAYT,EAAW,YAAH,gBAA0BK,EAA1B,UAE1B,OACE,yBAAKK,UAAU,QACb,6BACE,kBAAC,gBAAD,CAAeC,OAAQ,GACrBd,MAAOA,EACPC,SAAUE,EAAW,aAAYC,GACjC,kBAAC,gBAAD,CAAetB,OAAO,YAAYD,YAAa,EAAGkC,cAAc,WAChE,kBAAC,mBAAD,CAAkBC,MAAO,CAACC,WAAY,aAAcnC,OAAQ8B,EAAW/B,YAAa,EAAGkC,cAAc,WACrG,kBAAC,EAAD,CAAelC,YAAa,EAAGC,OAAQ8B,MAG3C,yBAAKI,MAAO,CAAE9E,MAAOyE,EAAWO,QAAS,IAAMhB,MCpB/CiB,EAAc,CAClBjE,qBACAoB,YACAC,WACAC,iBACAC,iBACAC,cAkEa0C,cA/DS,SAAAjE,GAAK,MAAK,CAChCc,OAAQd,EAAMkE,KAAKpD,OACnBC,MAAOf,EAAMkE,KAAKnD,MAClBoD,YAAanE,EAAMkE,KAAKlD,OAAOC,MAC/BmD,YAAapE,EAAMkE,KAAKlD,OAAOvB,MAC/B4E,QAASrE,EAAMkE,KAAKlD,OAAOE,EAC3BoD,iBAAkBtE,EAAMuD,UAAUA,YA2DlCS,EAFaC,CAtDG,SAAC,GAYZ,IAXL9C,EAWI,EAXJA,UACAC,EAUI,EAVJA,SACAC,EASI,EATJA,eACAC,EAQI,EARJA,eACAC,EAOI,EAPJA,WACAT,EAMI,EANJA,OACAC,EAKI,EALJA,MACAoD,EAII,EAJJA,YACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,QAIMrB,EAAgC,SAFlC,EADJsB,iBAKA,OACE,yBAAKZ,UAAS,2BAAsBV,EAAW,GAAK,UAAtC,MACZ,yBAAKU,UAAU,YACb,kBAAC,EAAD,CACEV,SAAUA,EACVH,MAAO/B,EACPgC,SAAU3B,GAHZ,UAMA,kBAAC,EAAD,CACE6B,SAAUA,EACVH,MAAO9B,EACP+B,SAAU1B,GAHZ,SAMA,kBAAC,EAAD,CACE4B,SAAUA,EACVH,MAAOsB,EACPrB,SAAUzB,GAHZ,SAMA,kBAAC,EAAD,CACE2B,SAAUA,EACVH,MAAOuB,EACPtB,SAAUxB,GAHZ,cAMA,kBAAC,EAAD,CACE0B,SAAUA,EACVH,MAAOwB,EACPvB,SAAUvB,GAHZ,iB,4NCtER,IAAMb,EAA2BnB,IAE3BgF,EAAc3D,YAAY,CAC9BC,MAAO,SACPrB,aAAc,CACZgF,IAAK,CACHC,OAAQ,EACRxD,MAAO,GACPyD,QAAS,EACTC,QAAS,IAEX3D,OAAQ,CACNyD,OAAQ,EACRxD,MAAO,GACPyD,QAAS,EACTC,QAAS,GACTC,KAAM,EACNnF,MAAO,GACPyB,EAAG,GAELb,YAAaK,EAAyBlB,cAExCM,S,qVAAS,EACP+E,OADO,SACA7E,EAAOC,GAEZ,cAAyB6E,OAAOC,QAAQ9E,EAAOC,SAA/C,eAAyD,CAAC,IAAD,0BAA/C8E,EAA+C,KAA1CnC,EAA0C,KACvD7C,EAAMwE,IAAIQ,GAAOnC,IAGrBoC,UAPO,SAOGjF,EAAOC,GAEf,cAAyB6E,OAAOC,QAAQ9E,EAAOC,SAA/C,eAAyD,CAAC,IAAD,0BAA/C8E,EAA+C,KAA1CnC,EAA0C,KACvD7C,EAAMgB,OAAOgE,GAAOnC,KAGrBnC,EAAyBZ,Y,EAIgDyE,EAAY/C,QAAtClB,G,EAAvCuE,O,EAAQI,U,EAAWlF,mB,EAAoBO,uBACvCiE,IAAf,Q,4NCxCA,IAAM7D,EAA2BnB,IAE3B2F,EAAatE,YAAY,CAC7BC,MAAO,QACPrB,aAAc,CACZ2F,OAAQ,EACRrE,OAAQ,IACRsE,QAAQ,EACRC,aAAc,GACdhF,YAAaK,EAAyBlB,cAExCM,S,qVAAS,IACJY,EAAyBZ,SADtB,CAENwF,UAFO,SAEGtF,EAAOC,GACfD,EAAMmF,OAASlF,EAAOC,SAExBiB,UALO,SAKGnB,EAAOC,GACfD,EAAMc,OAASb,EAAOC,SAExBqF,UARO,SAQGvF,EAAOC,GACfD,EAAMoF,OAASnF,EAAOC,SAExBsF,gBAXO,SAWSxF,EAAOC,GACrBD,EAAMqF,aAAepF,EAAOC,a,EAY9BgF,EAAW1D,QALblB,G,EADAP,mB,EACAO,uBACAgF,E,EAAAA,UACAnE,E,EAAAA,UACAoE,G,EAAAA,UACAC,G,EAAAA,gBAEaN,KAAf,QC/BMO,I,MAAgB,CACpBC,OAAQC,EACRzB,KAAM0B,EACNC,MAAOC,IA6CMlD,kBA1CF,SAAC,GAA2B,IAAzBzC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,IAAK2F,EAAc,EAAdA,QAClBC,EAAWC,cAEX3B,EAAmBhB,YAAY,SAAAtD,GAAK,OAAIA,EAAMuD,UAAUA,YAExD2C,EAAchD,sBAAY,SAACiD,GAC/BA,EAAEC,kBACFC,QAAQZ,GAAcnB,KACpB0B,EAASP,GAAcnB,GAAkB,CAAEnE,MAAKC,UACjD,CAACD,EAAKC,EAAKkE,EAAkB0B,IAE1BM,EAAQ,CACZZ,OAAQpC,YAAY,SAAAtD,GAAK,OAAIA,EAAM0F,OAAOrF,YAAYF,GAAKC,KAC3D8D,KAAMZ,YAAY,SAAAtD,GAAK,OAAIA,EAAMkE,KAAK7D,YAAYF,GAAKC,KACvDyF,MAAOvC,YAAY,SAAAtD,GAAK,OAAIA,EAAM6F,MAAMxF,YAAYF,GAAKC,MAIvDsD,EAAY,aAIhB,OAHCY,KAAoBgC,IAAW5C,GAAa,cAC7CqC,IAAYrC,GAAa,YAGvB,0BAAMA,UAAWA,EAAW6C,QAASL,GAEjCM,IAAEnH,IAAIiH,EAAO,SAAC7F,EAAM8C,GAClB,GAAK9C,EAAKd,OAAV,CACA,IAAM8G,EAAK,uCACOlD,EADP,eAENwC,EAAU,UAAY,GAFhB,eAGNzB,IAAqBf,EAAY,UAAY,GAHvC,KAIX,OAAO,0BACLyB,IAAKzB,EACLgD,QAASL,EACTxC,UAAW+C,UCJRC,I,MArBG,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACbrC,EAAmBhB,YAAY,SAAAtD,GAAK,OAAIA,EAAMuD,UAAUA,YAC9D,OACE,yBAAKG,UAAS,qBAAgBY,IAC5B,6BAASZ,UAAU,qBAEfvE,EAAME,IAAI,SAACuH,EAAGC,GAAJ,OACR,6BAAS7B,IAAK4B,EAAEjI,KAAM+E,UAAW,YAE7BjE,gBR1BQ,IQ0BQJ,IAAI,SAAAyH,GAAM,OACxB,kBAAC,GAAD,CAAM9B,IAAK8B,EAAQ3G,IAAK0G,EAAQzG,IAAK0G,EAAQf,QAASY,IAAgBG,a,iXCtBxF,IAAMC,GAAQ,CAACC,KAAMC,KAAOC,KAAKC,KAAYC,KAAMC,KAAaC,MAC7DjI,IAAI,SAACkI,EAAM7H,GAAP,MAAc,CACjB6H,OACA5I,KAAM4I,EAAKC,MAAM,kBAAkB,IAAM,UACzCC,MAAOC,OAAOhI,MAoBZiI,GAAyBpI,IAEzBqI,GAAehH,YAAY,CAC/BC,MAAO,UACPrB,aAAc,CACZuH,SACAc,WAAY,EACZC,MAAO,GACPzH,YAAasH,GAAuBnI,cAEtCM,S,uVAAS,IACJ6H,GAAuB7H,SADpB,CAENiI,cAFO,SAEO/H,EAAOC,GACnBD,EAAM6H,WAAa5H,EAAOC,SAE5B8H,SALO,SAKEhI,EAAOC,GACdD,EAAM8H,MAAQ7H,EAAOC,a,GAUvB0H,GAAapG,QAHflB,I,GADAP,mB,GACAO,uBACAyH,G,GAAAA,cACAC,G,GAAAA,SAEaJ,MAAf,QCvBehF,kBAjCF,SAAC,GAA2B,IAAzBzC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,IAAK2F,EAAc,EAAdA,QAClBC,EAAWC,cACX3B,EAAmBhB,YAAY,SAAAtD,GAAK,OAAIA,EAAMuD,UAAUA,YAExD2C,EAAchD,sBAAY,SAAAiD,GAC9BA,EAAEC,kBACmB,YAArB9B,GACE0B,EAASiC,GAAc,CAAE9H,MAAKC,UAC/B,CAACD,EAAKC,EAAK4F,EAAU1B,IAElB7D,EAAO6C,YAAY,SAAAtD,GAAK,OAAIA,EAAMkI,QAAQ7H,YAAYF,GAAKC,KAC3D+H,EAAiC,YAArB7D,EACdZ,EAAY,aAIhB,OAHAyE,IAAczE,GAAa,cAC3BqC,IAAYrC,GAAa,YAGvB,0BAAMA,UAAWA,EAAW6C,QAASL,GAEjCzF,EAAKd,QACL,0BACE4G,QAASL,EACTxC,UACE,+CACGqC,EAAU,UAAY,GADzB,eAEGoC,EAAY,UAAY,SCQxBC,GAhCO,SAAC,GAAqB,IAAnBzB,EAAkB,EAAlBA,YACjB0B,EAAY/E,YAAY,SAAAtD,GAAK,OAAIA,EAAMkI,QAAQnB,QAC/CzC,EAAmBhB,YAAY,SAAAtD,GAAK,OAAIA,EAAMuD,UAAUA,YAE9D,OACE,yBAAKG,UAAS,oCAAoD,YAArBY,EAAiC,UAAY,KAUxF,6BAASZ,UAAU,qBAEf2E,EAAUhJ,IAAI,SAACuH,EAAGC,GAAJ,OACZ,6BAAS7B,IAAK4B,EAAEjI,KAAM+E,UAAW,YAE7BjE,gBXrBQ,IWqBQJ,IAAI,SAAAyH,GAAM,OACxB,kBAACwB,GAAD,CAAUtD,IAAK8B,EAAQ3G,IAAK0G,EAAQzG,IAAK0G,EAAQf,QAASY,IAAgBG,YCVtFyB,GAAqB,CACzBjD,YACAnE,YACAoE,aACAC,oBA0CavB,eAtDS,SAAAjE,GAAK,MAAK,CAChCmF,OAAQnF,EAAM6F,MAAMV,OACpBrE,OAAQd,EAAM6F,MAAM/E,OACpBsE,OAAQpF,EAAM6F,MAAMT,OACpBC,aAAcrF,EAAM6F,MAAMR,aAC1Bf,iBAAkBtE,EAAMuD,UAAUA,YAmDlCgF,GAFatE,CAvCI,SAAC,GAUb,IATLkB,EASI,EATJA,OACAG,EAQI,EARJA,UACAxE,EAOI,EAPJA,OACAK,EAMI,EANJA,UACAiE,EAKI,EALJA,OACAG,EAII,EAJJA,UACAF,EAGI,EAHJA,aACAG,EAEI,EAFJA,gBAGMxC,EAAgC,UADlC,EADJsB,iBAGA,OACE,yBAAKZ,UAAS,4BAAuBV,EAAW,GAAK,UAAvC,MACZ,yBAAKU,UAAU,8BACb,kBAAC,EAAD,CACEV,SAAUA,EACVH,MAAO/B,EACPgC,SAAU3B,GAHZ,UAMA,kBAAC,EAAD,CACE6B,SAAUA,EACVH,MAAOsC,EACPrC,SAAUwC,GAHZ,SAMA,2BAAOkD,KAAK,WAAWC,QAASrD,EAAQtC,SAAUI,sBAAY,SAAAiD,GAAC,OAAIZ,EAAUY,EAAEuC,OAAOD,UAAU,CAAClD,MACjG,kBAAC,EAAD,CACEvC,SAAUA,EACVH,MAAOwC,EACPvC,SAAU0C,GAHZ,cC1CF+C,GAAqB,CACzBR,iBACAC,aA+Ba/D,eAvCS,SAAAjE,GAAK,MAAK,CAChC6H,WAAY7H,EAAMkI,QAAQL,WAC1BC,MAAO9H,EAAMkI,QAAQJ,MACrBxD,iBAAkBtE,EAAMuD,UAAUA,YAsClCgF,GAFatE,CA5BC,SAAC,GAMV,IALL4D,EAKI,EALJA,WACAE,EAII,EAJJA,cACAD,EAGI,EAHJA,MACAE,EAEI,EAFJA,SAGMhF,EAAgC,YADlC,EADJsB,iBAGA,OACE,yBAAKZ,UAAS,8BAAyBV,EAAW,GAAK,UAAzC,MACZ,yBAAKU,UAAU,gCACb,kBAAC,EAAD,CACEb,MAAOgF,EACP/E,SAAUiF,EACV/E,SAAUA,GAHZ,cAMA,kBAAC,EAAD,CACEH,MAAOiF,EACPhF,SAAUkF,EACVhF,SAAUA,GAHZ,aC4BOiB,eAlDS,SAAAjE,GAAK,MAAK,CAChCuD,UAAWvD,EAAMuD,UAAUA,YAmD3B,KAFaU,CA9CH,SAAC,GAAkB,EAAhBV,UAAiB,IAAD,EACSoF,mBAAS,GADlB,mBACtBhC,EADsB,KACTiC,EADS,OAEHD,mBAASzJ,EAAY,IAFlB,mBAEtB2J,EAFsB,KAEfC,EAFe,OAGHH,mBAAS,SAHN,mBAGtBvJ,EAHsB,KAGf2J,EAHe,KAKvBC,EAAoB9F,sBAAY,SAAAiD,GACpC2C,EAAS3C,EAAEuC,OAAO7F,QACjB,CAACiG,IAEEG,EAAoB/F,sBAAY,SAAAiD,GACpC4C,EAAS5C,EAAEuC,OAAO7F,QACjB,CAACkG,IAUJ,OAPAG,oBAAU,WAERC,GAAUC,OAAS,SAAAC,GACjBT,EAAeS,KAEhB,IAGD,8BACE,6BAASC,GAAG,iBACV,yCACA,4BAAQzG,MAAOgG,EAAO/F,SAAUkG,GAE5B9J,EAAYG,IAAI,SAAAO,GAAI,OAAI,4BAAQoF,IAAKpF,EAAMiD,MAAOjD,GAAOA,MAG7D,4BAAQiD,MAAOzD,EAAO0D,SAAUmG,GAC9B,4BAAQpG,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,WAGJ,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,6BAASyG,GAAG,aACV,kBAAC,GAAD,CAAW3C,YAAaA,IACxB,kBAAC,GAAD,CAAeA,YAAaA,Q,4BCrDf4C,GAEnB,WAAY5K,GAAO,IAAD,OAChB,GADgB,0BADlBA,KAAO,KACW,KAkBlB6K,cAAgB,SAAC3K,GACf,EAAK4K,MAAMD,cAAc3K,IAnBT,KAsBlB6K,eAAiB,SAAC7K,GAChB,EAAK4K,MAAMC,eAAe7K,IAvBV,KA0BlB8K,qBAAuB,SAACxK,EAAO2B,EAAQ8I,GACrC,EAAKH,MAAME,qBAAqBxK,EAAO2B,EAAQ8I,IA3B/B,KA8BlBC,aAAe,SAACC,GACd,EAAKL,MAAMM,IAAI,CACbC,SAAU,CACRvF,OAAQqF,EAAQ,QAjCJ,KAsClBG,YAAc,SAACH,GACb,EAAKL,MAAMM,IAAI,CACbC,SAAU,CACR/I,MAAO6I,EAAQ,QAzCH,KA8ClBI,cAAgB,SAACJ,GACf,EAAKL,MAAMM,IAAI,CACbC,SAAU,CACRtF,QAASoF,MAjDG,KAsDlBK,cAAgB,SAACL,GACf,EAAKL,MAAMM,IAAI,CACbC,SAAU,CACRrF,QAAkB,GAARmF,EAAc,QAzDZ,KA8DlBM,gBAAkB,SAACN,GACjB,EAAKL,MAAMM,IAAI,CACbM,eAAgB,CACd5F,OAASqF,EAAQ,EAAK,QAjEV,KAsElBzI,eAAiB,SAACyI,GAChB,EAAKL,MAAMM,IAAI,CACbM,eAAgB,CACdpJ,MAAO6I,EAAQ,QAzEH,KA8ElBQ,iBAAmB,SAACR,GAClB,EAAKL,MAAMM,IAAI,CACbM,eAAgB,CACd3F,QAASoF,MAjFG,KAsFlBS,iBAAmB,SAACT,GAClB,EAAKL,MAAMM,IAAI,CACbM,eAAgB,CACd1F,QAAkB,IAARmF,EAAe,QAzFb,KA8FlBU,cAAgB,SAACV,GACf,EAAKL,MAAMM,IAAI,CACbM,eAAgB,CACdI,cAAwB,IAARX,EAAe,MAjGnB,KAsGlBxI,eAAiB,SAACwI,GAChB,EAAKL,MAAMM,IAAI,CACbM,eAAgB,CACdK,QAAiB,GAARZ,MAzGG,KA8GlBvI,WAAa,SAACuI,GACZ,EAAKL,MAAMM,IAAI,CACb/I,OAAQ,CACN2J,EAAW,GAARb,OAhHFnL,EACH,MAAM,IAAIiM,MAAM,sCAElBC,KAAKlM,KAAOA,EACZkM,KAAKpB,MAAQ,IAAIhL,IAAKqM,UAAU,EAAGrM,IAAKsM,WACrCC,MACC,IAAIvM,IAAKwM,QACTxM,IAAKyM,QAETL,KAAKpB,MAAMM,IAAI,CACboB,QAAS,GACTC,WAAY,CACV5C,KAAM,eCfO6C,GAEnB,WAAY1M,GAAO,IAAD,OAChB,GADgB,0BADlBA,KAAO,KACW,KA8BlB6K,cAAgB,SAAC3K,GACf,EAAK4K,MAAMD,cAAc3K,IA/BT,KAkClB6K,eAAiB,SAAC7K,GAChB,EAAK4K,MAAMC,eAAe7K,IAnCV,KAsClB8K,qBAAuB,SAACxK,EAAO2B,EAAQ8I,GACrC,EAAKH,MAAME,qBAAqBxK,EAAO2B,EAAQ8I,IAvC/B,KA0ClBzI,UAAY,SAAA2I,GACV,EAAKL,MAAMM,IAAI,CACbC,SAAU,CACRrF,QAAkB,GAARmF,EAAc,KAE1BO,eAAgB,CACd1F,QAAkB,IAARmF,EAAe,QAhDb,KAqDlB1I,SAAW,SAAA0I,GACT,EAAKL,MAAMM,IAAI,CACbM,eAAgB,CACd5F,OAASqF,EAAQ,EAAK,QAxDV,KA6DlBzI,eAAiB,SAACyI,GAChB,EAAKL,MAAMM,IAAI,CACbM,eAAgB,CACdpJ,MAAO6I,EAAQ,QAhEH,KAqElBxI,eAAiB,SAACwI,GAChB,EAAKL,MAAMM,IAAI,CACbM,eAAgB,CACdK,QAAiB,GAARZ,MAxEG,KA6ElBvI,WAAa,SAACuI,GACZ,EAAKL,MAAMM,IAAI,CACb/I,OAAQ,CACN2J,EAAW,GAARb,OA/EFnL,EACH,MAAM,IAAIiM,MAAM,sCAElBC,KAAKlM,KAAOA,EACZkM,KAAKpB,MAAQ,IAAIhL,IAAKqM,UAAU,EAAGrM,IAAKsM,WACrCC,MACC,IAAIvM,IAAKwM,QACTxM,IAAKyM,QAETL,KAAKpB,MAAMM,IAAI,CACboB,QAAS,GACTG,QAAS,KACTF,WAAY,CACV5C,KAAM,YAERwB,SAAU,CACRvF,OAAQ,IACRC,QAAS,EACTzD,MAAO,KAETD,OAAQ,CACNyJ,cAAe,GAEjBJ,eAAgB,CACd3F,QAAS,uB,4ICvBjB,IAAM6G,GAAY,SAACC,EAAOjE,EAAMkE,GAC9BD,EAAMD,UAAUG,KAAMF,EAAMG,SAAUpE,EAAtBmE,CAA4BD,IAC5CA,EAASG,eAAIJ,EAAMG,WAAYpE,KAG1B,SAASsE,GAAgBL,EAAO/B,GACrC,IAAMqC,EAAYrC,EAAM9K,KACxB4M,GAAUC,EAAD,UAAWM,EAAX,eAAmCrC,EAAMI,cAClD0B,GAAUC,EAAD,UAAWM,EAAX,cAAkCrC,EAAMQ,aACjDsB,GAAUC,EAAD,UAAWM,EAAX,gBAAoCrC,EAAMS,eACnDqB,GAAUC,EAAD,UAAWM,EAAX,gBAAoCrC,EAAMU,eAEnDoB,GAAUC,EAAD,UAAWM,EAAX,kBAAsCrC,EAAMW,iBACrDmB,GAAUC,EAAD,UAAWM,EAAX,iBAAqCrC,EAAMpI,gBACpDkK,GAAUC,EAAD,UAAWM,EAAX,mBAAuCrC,EAAMa,kBACtDiB,GAAUC,EAAD,UAAWM,EAAX,mBAAuCrC,EAAMc,kBACtDgB,GAAUC,EAAD,UAAWM,EAAX,gBAAoCrC,EAAMe,eACnDe,GAAUC,EAAD,UAAWM,EAAX,iBAAqCrC,EAAMnI,gBACpDiK,GAAUC,EAAD,UAAWM,EAAX,aAAiCrC,EAAMlI,YAG3C,SAASwK,GAAmBP,EAAO/B,GACxC,IAAMqC,EAAYrC,EAAM9K,KACxB4M,GAAUC,EAAD,UAAWM,EAAX,WAA+BrC,EAAMtI,WAC9CoK,GAAUC,EAAD,UAAWM,EAAX,UAA8BrC,EAAMrI,UAC7CmK,GAAUC,EAAD,UAAWM,EAAX,iBAAqCrC,EAAMpI,gBACpDkK,GAAUC,EAAD,UAAWM,EAAX,iBAAqCrC,EAAMnI,gBACpDiK,GAAUC,EAAD,UAAWM,EAAX,aAAiCrC,EAAMlI,YAG3C,SAASyK,GAAoBR,EAAO/B,GACzC,IAAMqC,EAAYrC,EAAM9K,KACxB4M,GAAUC,EAAD,UAAWM,EAAX,WAA+BrC,EAAMnE,WAC9CiG,GAAUC,EAAD,UAAWM,EAAX,WAA+BrC,EAAMtI,WAC9CoK,GAAUC,EAAD,UAAWM,EAAX,WAA+BrC,EAAMlE,WAC9CgG,GAAUC,EAAD,UAAWM,EAAX,iBAAqCrC,EAAMjE,iBAG/C,SAASyG,GAAiBT,EAAO/B,GACtC,IAAMqC,EAAYrC,EAAM9K,KACxB4M,GAAUC,EAAD,UAAWM,EAAX,eAAmCrC,EAAM1B,eAClDwD,GAAUC,EAAD,UAAWM,EAAX,UAA8BrC,EAAMzB,UASxC,SAASkE,GAAmBV,EAAOrC,GAExC,IAFoD,IAAD,wBAEvC2C,GAFuC,uBAE5BK,EAF4B,KAGzC9L,EAAgBmL,EAAMG,WAAWG,GAAjCzL,YAHyC,uBAKjD,YAA0BA,EAAY0E,UAAtC,+CAAiD,CAAC,IAAD,6BAArCqH,EAAqC,KAA/BjM,EAA+B,4BAC/C,IAD+C,IAC/C,EAD+C,2BACnCkM,GADmC,uBAC7B5L,EAD6B,KAEvC8G,EAAOG,OAAO4E,IAAV,KAAgBR,EAAyBM,EAAQC,GAC3Dd,GAAUC,EAAOjE,EAAM,SAAA5H,GACrB,IAAMnB,EAAqB,YAAdsN,EAA0BpE,OAAOjH,EAAKZ,UAAYY,EAAKb,KAAKf,UACrEc,EACFwM,EAASI,QAAQ,CAAE9E,MAAO4E,EAAM7N,SAEhC2N,EAASK,WAAW,CAAE/E,MAAO4E,EAAM7N,YAPzC,EAA2B2B,EAAI4E,UAA/B,+CAA0C,CAAC,IAAD,OADK,oFALA,oFAEnD,MAAoCD,OAAOC,QAAQoE,EAAUsD,WAA7D,eAAyE,CAAC,IAAD,OCxD3E,IAAMC,GAAY9L,YAAY,CAC5BpB,aAAc,CACZmN,QAAS,eACTC,UAAW,KACXC,aAAc,GAEhB/M,SAAU,CACRgN,WADQ,SACG9M,EAAOC,GAChB8M,QAAQC,IAAI,aAAc/M,EAAOC,SACjCF,EAAM2M,QAAU1M,EAAOC,SAEzB+M,aALQ,SAKKjN,EAAOC,GAClBD,EAAM4M,UAAY3M,EAAOC,SAE3BgN,gBARQ,SAQQlN,EAAOC,GACrBD,EAAM6M,aAAe5M,EAAOC,Y,GAK2BwM,GAAUlL,QAA9B0L,I,GAA1BJ,W,GAAYG,a,GAAcC,iBAC1BR,MAAf,Q,6BCrBMS,GAAiBvM,YAAY,CACjCpB,aAAc,CACZ+D,UAAW,MAEbzD,SAAU,CACRsN,aADQ,SACKpN,EAAOC,GAClBD,EAAMuD,UAAYtD,EAAOC,QAAQqD,cAKxB6J,GAAiBD,GAAe3L,QAAhC4L,aACAD,MAAf,Q,ujBCNA,IAeeE,GAfG,WAAoC,IAAnCC,EAAkC,uDAArB,GAAI9N,EAAiB,uCACnD,OAAO+N,YAAe,IACpBC,QAAS,CACP9H,OAAQ+H,EACRvJ,KAAMwJ,EACN7H,MAAO8H,GACPzF,QAAS0F,GACTC,KAAMC,GACNvK,UAAWwK,IAEbT,WAAW,GAAD,mBAAMU,eAAN,YAAiCV,KACxC9N,GAAgB,CAAEyO,eAAgBzO,M,6NCdzC,IAAM0O,GAAY,CAChB,eACA,mBAGIC,GAAeC,+GAAYC,eAE3BC,GAAoB,SAAAC,GAAM,OAAI,SAAA/C,GAAK,OAAI,SAAAgD,GAAI,OAAI,SAAAvO,GACnD,IAAMwO,EAASD,EAAKvO,GAIpB,OAHMiO,GAAUlP,SAASiB,EAAOuI,OAAWvI,EAAOyO,QAChDH,EAAOI,KAAK,S,uVAAZ,IAA2B1O,EAA3B,CAAmCyO,OAAQH,EAAOjF,MAE7CmF,MAGIG,GAAmB,sCAAG,oCAAAC,EAAA,4DAC3BN,EAASO,KAAGV,kCAAkC,CAAEW,WAAY,CAAC,eADlC,SAKN,IAAIC,QAAQ,SAAAC,GACrCV,EAAOW,GAAG,OAAQ,SAAAC,GAChBpC,QAAQC,IAAImC,GACZpC,QAAQC,IAAI,kBAAmBmC,EAAO5L,WACtCA,EAAY4K,IAA8BgB,EAAO5L,UACjD0L,EAAQE,EAAOnP,WAVc,cAK3BR,EAL2B,OAc3B4P,EAAgBd,GAAkBC,IAClC/C,EAAQ6B,GAAU,CAAC+B,GAAgB5P,IAEnCwG,SAASoH,GAAa,CAAE7J,eAE9BgL,EAAOW,GAAG,SAAU,SAAAjP,GAClBuL,EAAMxF,SAAS/F,KAGjBsO,EAAOW,GAAG,YAAa,SAAC1I,EAAG6I,GAAQ,IAAD,EACD7D,EAAMG,WADL,EACxBpI,UACR8L,EAFgC,kCAKjClB,IACDI,EAAOW,GAAG,mBAAoB,YAAyB,IAC/C3L,EAD8C,EAArB+L,eACEf,EAAOjF,IACxCkC,EAAMxF,SAASoH,GAAa,CAAE7J,iBA/BC,kBAkC1BiI,GAlC0B,0CAAH,qD,SCpBX+D,G,WAMnB,WAAY9F,EAAO+F,GAAW,IAAD,iCAJ7BC,OAAS,GAIoB,KAH7BhG,MAAQ,KAGqB,KAF7BiG,gBAAkB,EAEW,KAY7BnD,QAAU,YAAsB,IAAnB9E,EAAkB,EAAlBA,MAAOjJ,EAAW,EAAXA,KACZmR,EAAQ,EAAKF,OAAOhI,GACrBkI,EAAM3Q,SAASR,IAClBmR,EAAMC,KAAKpR,IAfc,KAmB7BgO,WAAa,YAAsB,IAAnB/E,EAAkB,EAAlBA,MAAOjJ,EAAW,EAAXA,KACrB,EAAKiR,OAAOhI,GAAS,EAAKgI,OAAOhI,GAAOzG,OAAO,SAAA6B,GAAK,OAAIA,IAAUrE,KAnBlEqM,KAAKpB,MAAQA,EACboB,KAAK4E,OAAS,IAAII,MAAML,GACrBM,KAAK,MAAMzQ,IAAI,SAAA+D,GAAC,MAAI,K,sDAGhBiG,GACP,OAAOwB,KAAK4E,OAAOpG,IAAS,O,KCVX0G,G,WAQnB,cAAgC,IAAD,OAAjBC,EAAiB,EAAjBA,IAAKR,EAAY,EAAZA,SAAY,0BAN/BnG,KAAO,EAMwB,KAL/BmG,SAAW,EAKoB,KAJ/BpG,OAAS,KAIsB,KAH/B6G,KAAO,KAGwB,KAF/BxD,UAAY,GAEmB,KAS/ByD,cAAgB,SAACtG,GAEf,EAAKuG,QAAQvG,EAAM,EAAKP,MAExB,cAAkBvE,OAAOsL,OAAO,EAAK3D,WAArC,eAAiD,CAA5C,IAAM4D,EAAG,KACNC,EAAYD,EAAIE,SAAS,EAAKlH,MACpCiH,EAAUxP,OAAS,GACjBuP,EAAI5G,MAAME,qBAAqB2G,EAAW,MAAO1G,GAErD,EAAKP,OACD,EAAKA,MAAQ,EAAKmG,WAAU,EAAKnG,KAAO,IAnBf,KAmC/BmH,eAAiB,SAAC/G,GAChB,EAAKgD,UAAUhD,EAAM9K,MAAQ,IAAI4Q,GAAS9F,EAAO,EAAK+F,WApCzB,KAuC/BiB,MAAQ,WACNhS,IAAKiS,QAAQC,SACb,EAAKV,KAAKQ,SAzCmB,KA4C/BG,KAAO,WACL,EAAKX,KAAKW,OACV,EAAKvH,KAAO,GA7CZwB,KAAK2E,SAAWA,EAChB/Q,IAAKoS,UAAUb,IAAInN,MAAQmN,EAC3BvR,IAAKoS,UAAUJ,MAAM,QAErB5F,KAAKoF,KAAO,IAAIxR,IAAKqS,KAAKjG,KAAKqF,cAAe,OAC9CrF,KAAKoF,KAAKc,UAAW,E,qDAgBfnH,EAAMP,GAAO,IAAD,OACL,IAATA,GAAcwB,KAAKmG,QACrBvS,IAAKwS,KAAKC,SAAS,WACjB,EAAKF,OAAOG,KAAKC,QAChBxH,GAEDiB,KAAKzB,QACP3K,IAAKwS,KAAKC,SAAS,WACjB,EAAK9H,OAAOC,IACXO,O,KCrCIyH,GAAkB,SAACtP,EAAGuP,EAASC,GAG1C,OAAQxP,EAFO,IAEQwP,EAAUD,GAA1B,EAAyDA,GCL7CE,GAEnB,WAAY7S,GAAO,IAAD,OAChB,GADgB,0BADlBA,KAAO,KACW,KAyClBgL,qBAAuB,SAACxK,EAAO2B,EAAQ8I,GACrC,EAAKH,MAAME,qBAAqBxK,EAAO2B,EAAQ8I,IA1C/B,KA6ClBtE,UAAY,SAAAwE,GDjDU,IAAI2H,EAAgBH,ECoDxC,EAAKnM,OAAOuM,SAAS7O,OAAiBiH,GDpDd2H,ECoDqB,KAAW,GDpDhBH,ECoDW,MAAH,EDnDIG,GAAUH,GCG9C,KAmDlBnQ,UAAY,SAAA2I,GACV,EAAKL,MAAMM,IAAI,CACbC,SAAU,CACRrF,QAAkB,EAARmF,EAAa,KAEzBO,eAAgB,CACd1F,QAAkB,GAARmF,EAAc,QAzDZ,KA8DlBvE,UAAY,SAAAvF,GAER,EAAKoF,OAAOuM,IAAI9O,MADd7C,EACsB,EAEA,GAlEV,KAsElBwF,gBAAkB,SAAAsE,GAChB,EAAK8H,QAAQC,MAAMhP,MAAQiH,IAtEtBnL,EACH,MAAM,IAAIiM,MAAM,sCAElBC,KAAKlM,KAAOA,EAEZkM,KAAK1F,OAAS,IAAI1G,IAAKqT,SACvBjH,KAAK+G,QAAU,IAAInT,IAAKsT,QACxBlH,KAAKzF,OAAS,IAAI3G,IAAKuT,OAAO,CAC5BnT,UAAW,GACX6L,QAAS,EACTD,cAAe,IACfE,EAAG,GACHsH,OAAQ,KAEVpH,KAAKzF,OAAOuM,IAAI9O,MAAQ,EACxBgI,KAAKpB,MAAQ,IAAIhL,IAAKqM,UAAU,EAAGrM,IAAKsM,WACrCC,MACCH,KAAK+G,QACL/G,KAAK1F,OACL0F,KAAKzF,OACL,IAAI3G,IAAKwM,QACTxM,IAAKyM,QAETL,KAAKpB,MAAMM,IAAI,CACboB,QAAS,GACTG,QAAS,KACTF,WAAY,CACV5C,KAAM,YAER6B,eAAgB,CACd5F,OAAQ,IACRxD,MAAO,EACPyD,QAAS,GAEX1D,OAAQ,CACN2J,EAAG,MCpCUuH,GACnB,WAAYvT,EAAMoI,GAAQ,IAAD,iCAsBzB4C,qBAAuB,SAACxK,EAAO2B,EAAQ8I,GAErCzK,EAAMgT,QAAQ,SAAAvS,GACP,EAAKwS,KAAKxS,KACf,EAAK6J,MAAMmC,IAAIhM,GAAMyS,QAAQzI,GAC7B,EAAKH,MAAMmC,IAAIhM,GAAM6Q,MAAM7G,OA3BN,KA+BzB7B,cAAgB,SAAA+B,GAEd,EAAK9I,OAAOnC,UAAUgE,MAAQwO,GAAgBiB,KAAKC,IAAIzI,EAAO,GAAI,EAAG,MAjC9C,KAoCzB9B,SAAW,SAAA8B,GACT,EAAKhC,MAAM0K,SAAS3P,MAAQwO,GAAgBvH,EAAO,GAAK,IACxD,EAAKhC,MAAM6J,IAAI9O,MAAQ4P,gBAAM3I,EAAQ,GAAK,EAAG,IArC7Ce,KAAKlM,KAAOA,EAEZkM,KAAKuH,KAAOrL,EAAM2L,OAAO,SAACC,EAAKC,GAE7B,OADAD,EAAIC,EAAKnL,OAASmL,EAAKrL,KAChBoL,GACN,IAEH9H,KAAK7J,OAAS,IAAIvC,IAAKoU,OACvBhI,KAAK/C,MAAQ,IAAIrJ,IAAKqU,cAAc,KAAM,IAG1CjI,KAAKpB,MAAQ,IAAIhL,IAAKsU,QAAQlI,KAAKuH,MAChCpH,MACCH,KAAK7J,OACL6J,KAAK/C,MACL,IAAIrJ,IAAKuU,QAAQ,GACjB,IAAIvU,IAAKwM,QACTxM,IAAKyM,S,yCCDb,IACa/B,GAAY,IAAI4G,GAAU,CAAEC,IAD7B,GACkCR,S3BlBtB,K2BuBxB,qBAAC,sCAAAX,EAAA,qEAIqBD,KAJrB,cAIOpD,EAJP,OAMCrC,GAAU6H,OAAS,SAAApH,GACjB4B,EAAMxF,SAASkH,GAAgBtD,EAXjB,IAFN,G3BjBY,M2BiChBlE,EAAS,IAAI6D,GAAO,UACpBrF,EAAO,IAAImH,GAAe,QAC1BxF,EAAQ,IAAI2L,GAAgB,SAC5BtJ,EAAU,IAAIgK,GAAa,UAAW1G,EAAMG,WAAWzD,QAAQnB,OAErEoC,GAAUqH,eAAe9K,GACzByD,GAAUqH,eAAetM,GACzBiF,GAAUqH,eAAe3K,GACzBsD,GAAUqH,eAAetI,GAEzB2D,GAAgBL,EAAO9F,GACvBqG,GAAmBP,EAAOtH,GAC1B8H,GAAoBR,EAAO3F,GAC3BoG,GAAiBT,EAAOtD,GAExBgE,GAAmBV,EAAOrC,IAG1B8J,SAASC,eAAe,iBAAiBC,UAAY,2BA5BtD,UA+BOC,KAAkB3U,IAAKiS,SA/B9B,QAkCS7D,EAAiBrB,EAAMG,WAAWkC,KAAlChB,aACRE,QAAQC,IAAIH,GACS,IAAjBA,EACF1D,GAAUsH,QAEV4C,WAAW,WACTlK,GAAUsH,SACTjF,EAAMG,WAAWkC,KAAKhB,aAAesE,KAAKC,OAK/CkC,IAASC,OACP,kBAAC,IAAD,CAAU/H,MAAOA,GACf,kBAAC,GAAD,OAEDyH,SAASC,eAAe,SAlD5B,yCAAD,I,6DC7BAM,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,4C","file":"static/js/main.1428cd7e.chunk.js","sourcesContent":["import Tone from 'tone';\n\n/**\n * https://pages.mtu.edu/~suits/west_scales.html\n * https://www.musicnotes.com/now/tips/circle-of-fifths-guide/\n * https://github.com/tonaljs/tonal/blob/master/packages/scale-dictionary/data.ts\n */\n\n// helper functions\nexport function isBlack(note) {\n  return note.color === 'black';\n}\n\nexport function isWhite(note) {\n  return note.color === 'white'\n}\n\nexport function generateNotes(startNote = 0, endNote = 127) {\n  if (startNote < 0 || endNote > 127) {\n    console.error('note out of range');\n    return;\n  }\n\n  let notes = new Array(endNote - startNote).fill(0).map((_, i) => i + startNote);\n  notes = notes.map(midiToNote);\n  return notes;\n}\n\nexport const midiToNote = noteNumber => {\n  const freq = Tone.Frequency(noteNumber, 'midi');\n  const name = freq.toNote();\n  return {\n    name,\n    frequency: freq.toFrequency(),\n    color: name.includes('#') ? 'black' : 'white',\n    midi: noteNumber\n  }\n}\n\nexport const nameToNote = name => {\n  const freq = Tone.Frequency(name, 'note');\n  return {\n    name,\n    frequency: freq.toFrequency(),\n    color: name.includes('#') ? 'black' : 'white',\n    midi: freq.toMidi()\n  }\n}\n\nexport const octaveNotes = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\n","\nimport { midiToNote, nameToNote } from '../../util/notes-util';\nimport { scale } from '@tonaljs/scale';\nimport { range } from 'lodash';\n\nexport const numNotes = 14;\nexport const numSteps = 16;\nexport const startNote = 36;\n// export const notes = generateNotes(startNote, startNote + numNotes);\n\nexport const notes = [...scale('B3 minor').notes, ...scale('B4 minor').notes].map(nameToNote);\n\nexport const createCompositionSliceConfig = () => ({\n  initialState: range(numNotes)\n    .map(i =>\n      range(numSteps)\n        .map(() => ({\n          active: false,\n          note: notes[i],\n          keyIndex: i\n        }))\n    ),\n  reducers: {\n    setCompositionCell(state, action) {\n      const { row, col, active } = action.payload;\n      state.composition[row][col].active = active;\n    },\n    toggleCompositionCell(state, action) {\n      const { row, col } = action.payload;\n      state.composition[row][col].active = !state.composition[row][col].active;\n    },\n    transpose(state, action) {\n      const { semitones } = action.payload;\n      state.composition = state.composition\n        .map(row => row.map(cell => midiToNote(cell.midi + semitones)));\n    }\n  }\n});","import { createSlice } from 'redux-starter-kit';\nimport { createCompositionSliceConfig } from '../redux/config-creators/compositionReducerConfig';\n\nconst compositionReducerConfig = createCompositionSliceConfig();\n\nconst bassSlice = createSlice({\n  slice: 'bass',\n  initialState: {\n    length: 0.07,\n    shape: 0,\n    filter: {\n      decay: 0.5,\n      range: 0.3769,\n      q: 0.1,\n    },\n    composition: compositionReducerConfig.initialState\n  },\n  reducers: {\n    ...compositionReducerConfig.reducers,\n    setLength(state, action) {\n      state.length = action.payload;\n    },\n    setShape(state, action) {\n      state.shape = action.payload;\n    },\n    setFilterDecay(state, action) {\n      state.filter.decay = action.payload;\n    },\n    setFilterRange(state, action) {\n      state.filter.range = action.payload;\n    },\n    setFilterQ(state, action) {\n      state.filter.q = action.payload;\n    },\n  }\n});\n\nexport const {\n  setCompositionCell,\n  toggleCompositionCell,\n  setLength,\n  setShape,\n  setFilterDecay,\n  setFilterRange,\n  setFilterQ,\n} = bassSlice.actions;\nexport default bassSlice.reducer;","import React, { useRef } from 'react';\nimport {\n  useCircularInputContext,\n  useCircularDrag\n} from 'react-circular-input'\n\nconst DialIndicator = ({strokeWidth, stroke}) => {\n  const { getPointFromValue, center } = useCircularInputContext()\n  const { x, y,  } = getPointFromValue()\n\n  const ref = useRef(null)\n  useCircularDrag(ref)\n\n  return <g>\n    <line x1={center.x} y1={center.y} x2={x} y2={y} stroke={stroke} strokeWidth={strokeWidth}/>\n    {/* <line x1={center.x} y1={center.y} x2={x} y2={y} stroke='white' strokeOpacity={0} strokeWidth={6}/> */}\n    <circle ref={ref} cx={x} cy={y} r={20} stroke='white' opacity={0}/>\n  </g> \n\n}\n\nexport default DialIndicator;","import React, { memo, useCallback } from 'react';\nimport { throttle } from 'lodash';\nimport { useSelector } from 'react-redux';\n\nimport {\n  CircularInput,\n  CircularTrack,\n  CircularProgress,\n} from 'react-circular-input';\nimport DialIndicator from './DialIndicator';\n\nconst Dial = ({ value, onChange, children, disabled }) => {\n\n  const handleChange = useCallback(throttle(v => {\n    onChange(v)\n  }, 100), [onChange])\n\n  const char = useSelector(state => state.character.character);\n  const textColor = disabled ? 'lightgray' : 'black'\n  const mainColor = disabled ? 'lightgray' : `var(--${char}Color)`\n\n  return (\n    <div className='knob'>\n      <div>\n        <CircularInput radius={21}\n          value={value}\n          onChange={disabled ? () => { } : handleChange}>\n          <CircularTrack stroke='lightgray' strokeWidth={1} strokeLinecap='square' />\n          <CircularProgress style={{transition: 'stroke 1s'}} stroke={mainColor} strokeWidth={2} strokeLinecap='square' />\n          <DialIndicator strokeWidth={2} stroke={mainColor} />\n        </CircularInput>\n      </div>\n      <div style={{ color: textColor, zIndex: -1 }}>{children}</div>\n    </div>\n  );\n}\n\nexport default memo(Dial);","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  setCompositionCell,\n  setLength,\n  setShape,\n  setFilterDecay,\n  setFilterRange,\n  setFilterQ\n} from './bassReducer';\nimport Dial from '../components/util/Dial';\n\nconst mapDispatch = {\n  setCompositionCell,\n  setLength,\n  setShape,\n  setFilterDecay,\n  setFilterRange,\n  setFilterQ\n};\n\nconst mapStateToProps = state => ({\n  length: state.bass.length,\n  shape: state.bass.shape,\n  filterDecay: state.bass.filter.decay,\n  filterRange: state.bass.filter.range,\n  filterQ: state.bass.filter.q,\n  currentCharacter: state.character.character\n});\n\nconst BassSynth = ({\n  setLength,\n  setShape,\n  setFilterDecay,\n  setFilterRange,\n  setFilterQ,\n  length,\n  shape,\n  filterDecay,\n  filterRange,\n  filterQ,\n  currentCharacter\n}) => {\n\n  const disabled = currentCharacter !== 'bass';\n  // actual render code\n  return (\n    <div className={`bass-synth synth ${disabled ? '' : 'current'} `}>\n      <div className='knob-row'>\n        <Dial\n          disabled={disabled}\n          value={length}\n          onChange={setLength} >\n          Length\n        </Dial>\n        <Dial\n          disabled={disabled}\n          value={shape}\n          onChange={setShape} >\n          Shape\n        </Dial>\n        <Dial\n          disabled={disabled}\n          value={filterDecay}\n          onChange={setFilterDecay} >\n          Decay\n        </Dial>\n        <Dial\n          disabled={disabled}\n          value={filterRange}\n          onChange={setFilterRange} >\n          Brightness\n        </Dial>\n        <Dial\n          disabled={disabled}\n          value={filterQ}\n          onChange={setFilterQ} >\n          Harshness\n        </Dial>\n      </div>\n    </div >\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatch\n)(BassSynth);\n","import { createSlice } from 'redux-starter-kit';\nimport { createCompositionSliceConfig } from '../config-creators/compositionReducerConfig';\n\nconst compositionReducerConfig = createCompositionSliceConfig();\n\nconst synth1Slice = createSlice({\n  slice: 'synth1',\n  initialState: {\n    amp: {\n      attack: 0,\n      decay: 0.5,\n      sustain: 1,\n      release: 0.2\n    },\n    filter: {\n      attack: 0,\n      decay: 0.5,\n      sustain: 1,\n      release: 0.2,\n      base: 0,\n      range: 0.5,\n      q: 0,\n    },\n    composition: compositionReducerConfig.initialState\n  },\n  reducers: {\n    setAmp(state, action) {\n      // allow for setting arbitrary values\n      for (let [key, value] of Object.entries(action.payload)) {\n        state.amp[key] = value;\n      }\n    },\n    setFilter(state, action) {\n      // allow for setting arbitrary values\n      for (let [key, value] of Object.entries(action.payload)) {\n        state.filter[key] = value;\n      }\n    },\n    ...compositionReducerConfig.reducers\n  }\n});\n\nexport const { setAmp, setFilter, setCompositionCell, toggleCompositionCell } = synth1Slice.actions;\nexport default synth1Slice.reducer;","import { createSlice } from 'redux-starter-kit';\nimport { createCompositionSliceConfig } from '../redux/config-creators/compositionReducerConfig';\n\nconst compositionReducerConfig = createCompositionSliceConfig();\n\nconst lennySlice = createSlice({\n  slice: 'lenny',\n  initialState: {\n    reverb: 0,\n    length: 0.25,\n    phaser: false,\n    vibratoDepth: 0.1,\n    composition: compositionReducerConfig.initialState\n  },\n  reducers: {\n    ...compositionReducerConfig.reducers,\n    setReverb(state, action) {\n      state.reverb = action.payload;\n    },\n    setLength(state, action) {\n      state.length = action.payload;\n    },\n    setPhaser(state, action) {\n      state.phaser = action.payload; \n    },\n    setVibratoDepth(state, action) {\n      state.vibratoDepth = action.payload;\n    }\n  }\n});\n\nexport const {\n  setCompositionCell,\n  toggleCompositionCell,\n  setReverb,\n  setLength,\n  setPhaser,\n  setVibratoDepth\n} = lennySlice.actions\nexport default lennySlice.reducer;\n\n","import React, { useCallback, memo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toggleCompositionCell as toggle1 } from '../../redux/reducers/synth1Reducer';\nimport { toggleCompositionCell as toggleBass } from '../../BassSynth/bassReducer';\nimport { toggleCompositionCell as toggleLenny } from '../../LennySynth/lennyReducer';\nimport _ from 'lodash'\nimport './cell.css';\n\nconst toggleActions = {\n  synth1: toggle1,\n  bass: toggleBass,\n  lenny: toggleLenny,\n};\n\nconst Cell = ({ row, col, playing }) => {\n  const dispatch = useDispatch();\n\n  const currentCharacter = useSelector(state => state.character.character);\n\n  const handleClick = useCallback((e) => {\n    e.stopPropagation();\n    Boolean(toggleActions[currentCharacter]) &&\n      dispatch(toggleActions[currentCharacter]({ row, col }));\n  }, [row, col, currentCharacter, dispatch]);\n\n  const cells = {\n    synth1: useSelector(state => state.synth1.composition[row][col]),\n    bass: useSelector(state => state.bass.composition[row][col]),\n    lenny: useSelector(state => state.lenny.composition[row][col]),\n  };\n\n  // const className = currentCharacter in cells ? 'piano-cell clickable' : 'piano-cell';\n  let className = 'piano-cell';\n  (currentCharacter in cells) && (className += ' clickable')\n  playing && (className += ' playing')\n\n  return (\n    <span className={className} onClick={handleClick} >\n      {\n        _.map(cells, (cell, character) => {\n          if (!cell.active) return;\n          const cn = 'cell-trigger ' +\n            `cell-trigger-${character} ` +\n            `${playing ? 'playing' : ''} ` +\n            `${currentCharacter === character ? 'current' : ''} `\n          return <span\n            key={character}\n            onClick={handleClick}\n            className={cn}\n          />\n        })\n      }\n    </span>\n  );\n}\n\nexport default memo(Cell);","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport Cell from './Cell';\nimport { isBlack } from '../../util/notes-util';\nimport { notes, numSteps } from '../../redux/config-creators/compositionReducerConfig';\nimport { range } from 'lodash';\nimport './piano-roll.css';\n\nconst PianoRollKeys = () => (\n  <section className='piano-roll-keys'>\n    {notes.map((n, i) => {\n      const className = ['piano-key', isBlack(n) ? 'black' : 'white'].join(' ');\n      return (\n        <div\n          className={className}\n          key={n.name}>\n          <p>{n.name}</p>\n        </div>\n      );\n    })}\n  </section>\n);\n\nconst PianoRoll = ({ currentStep }) => {\n  const currentCharacter = useSelector(state => state.character.character);\n  return (\n    <div className={`piano-roll ${currentCharacter}`}>\n      <section className='piano-roll-editor'>\n        {\n          notes.map((n, rowNum) =>\n            <section key={n.name} className={'step-row'}>\n              {\n                range(numSteps).map(colNum =>\n                  <Cell key={colNum} row={rowNum} col={colNum} playing={currentStep === colNum} />\n                )\n              }\n            </section>\n          )\n        }\n      </section>\n    </div>\n  );\n}\n\nexport default PianoRoll;\n","import { createSlice } from 'redux-starter-kit';\nimport { createCompositionSliceConfig } from '../redux/config-creators/compositionReducerConfig';\n\nimport kick from '../audio-files/kicks/kick_02.wav';\nimport snare from '../audio-files/snares/snare_01.wav'\nimport rim from '../audio-files/rims/rim_01.wav';\nimport shakerSnap from '../audio-files/shaker_snaps/shaker_snap_01.wav';\nimport clap from '../audio-files/claps/clap_01.wav';\nimport shortCymbal from '../audio-files/short_cymbals/short_cymbal_01.wav';\nimport longCymbal from '../audio-files/long_cymbals/long_cymbal_01.wav';\n\nconst files = [kick, snare, rim, shakerSnap, clap, shortCymbal, longCymbal]\n  .map((path, i) => ({\n    path,\n    name: path.match(/\\w*_\\d\\d(?=\\.)/)[0] || 'default',\n    index: String(i)\n  }));\n\n// const kicksContext = require.context('../audio-files/kicks/', true, /01\\.wav$/);\n// const snaresContext = require.context('../audio-files/snares', true, /01\\.wav$/);\n// const rimsContext = require.context('../audio-files/rims', true, /01\\.wav$/);\n// const shakerSnapsContext = require.context('../audio-files/shaker_snaps', true, /01\\.wav$/);\n// const clapsContext = require.context('../audio-files/claps', true, /01\\.wav$/);\n// const shortCymbalsContext = require.context('../audio-files/short_cymbals', true, /01\\.wav$/);\n// const longCymbalsContext = require.context('../audio-files/long_cymbals', true, /01\\.wav$/);\n\n// resolve file paths\n// for (let [key, context] of Object.entries(files)) {\n//   files[key] = context.keys().map(k => {\n//     const file = context(k)\n//     const name = file.match(/\\w*_\\d\\d(?=\\.)/)[0] || 'default';\n//     return { file, name };\n//   });\n// }\n\nconst compositionSliceConfig = createCompositionSliceConfig();\n\nconst drummerSlice = createSlice({\n  slice: 'drummer',\n  initialState: {\n    files,\n    filterFreq: 1,\n    delay: 0.1,\n    composition: compositionSliceConfig.initialState,\n  },\n  reducers: {\n    ...compositionSliceConfig.reducers,\n    setFilterFreq(state, action) {\n      state.filterFreq = action.payload;\n    },\n    setDelay(state, action) {\n      state.delay = action.payload\n    }\n  }\n});\n\nexport const {\n  setCompositionCell,\n  toggleCompositionCell,\n  setFilterFreq,\n  setDelay\n} = drummerSlice.actions;\nexport default drummerSlice.reducer;","import React, { useCallback, memo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toggleCompositionCell as toggleDrummer } from '../../Drummer/drummerReducer';\nimport './cell.css';\n\n\nconst Cell = ({ row, col, playing }) => {\n  const dispatch = useDispatch();\n  const currentCharacter = useSelector(state => state.character.character);\n\n  const handleClick = useCallback(e => {\n    e.stopPropagation();\n    currentCharacter === 'drummer' &&\n      dispatch(toggleDrummer({ row, col }));\n  }, [row, col, dispatch, currentCharacter]);\n\n  const cell = useSelector(state => state.drummer.composition[row][col]);\n  const isDrummer = currentCharacter === 'drummer';\n  let className = 'piano-cell';\n  isDrummer && (className += ' clickable')\n  playing && (className += ' playing')\n\n  return (\n    <span className={className} onClick={handleClick} >\n      {\n        cell.active &&\n        <span\n          onClick={handleClick}\n          className={\n            'cell-trigger cell-trigger-drummer ' +\n            `${playing ? 'playing' : ''} ` +\n            `${isDrummer ? 'current' : ''}`\n          }\n        />\n      }\n    </span>\n  );\n}\n\nexport default memo(Cell);","import React from 'react';\nimport { numSteps } from '../../redux/config-creators/compositionReducerConfig';\nimport { range } from 'lodash';\nimport { useSelector } from 'react-redux';\nimport './piano-roll.css';\nimport DrumCell from './DrumCell';\n\nconst DrumSequencer = ({ currentStep }) => {\n  const drumFiles = useSelector(state => state.drummer.files);\n  const currentCharacter = useSelector(state => state.character.character);\n\n  return (\n    <div className={`piano-roll drum-sequencer ${currentCharacter === 'drummer' ? 'drummer' : ''}`}>\n      {/* <div className='piano-roll-keys'>\n        {drumFiles.map((file, i) =>\n          <div\n            className='piano-key'\n            key={file.name}>\n            <p>{drumFiles[i].name}</p>\n          </div>\n        )}\n      </div> */}\n      <section className='piano-roll-editor'>\n        {\n          drumFiles.map((n, rowNum) =>\n            <section key={n.name} className={'step-row'}>\n              {\n                range(numSteps).map(colNum =>\n                  <DrumCell key={colNum} row={rowNum} col={colNum} playing={currentStep === colNum} />\n                )\n              }\n            </section>\n          )\n        }\n      </section>\n    </div>\n  );\n}\n\nexport default DrumSequencer;\n","import React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport Dial from '../components/util/Dial.jsx';\nimport {\n  setReverb,\n  setLength,\n  setPhaser,\n  setVibratoDepth\n} from './lennyReducer';\n\nconst mapStateToProps = state => ({\n  reverb: state.lenny.reverb,\n  length: state.lenny.length,\n  phaser: state.lenny.phaser,\n  vibratoDepth: state.lenny.vibratoDepth,\n  currentCharacter: state.character.character\n});\n\nconst mapDispatchToProps = {\n  setReverb,\n  setLength,\n  setPhaser,\n  setVibratoDepth\n};\n\nconst LennySynth = ({\n  reverb,\n  setReverb,\n  length,\n  setLength,\n  phaser,\n  setPhaser,\n  vibratoDepth,\n  setVibratoDepth,\n  currentCharacter\n}) => {\n  const disabled = currentCharacter !== 'lenny';\n  return (\n    <div className={`lenny-synth synth ${disabled ? '' : 'current'} `}>\n      <div className='knob-row knob-row-vertical'>\n        <Dial\n          disabled={disabled}\n          value={length}\n          onChange={setLength} >\n          Length\n        </Dial>\n        <Dial\n          disabled={disabled}\n          value={reverb}\n          onChange={setReverb} >\n          Space\n        </Dial>\n        <input type='checkbox' checked={phaser} onChange={useCallback(e => setPhaser(e.target.checked), [setPhaser])} />\n        <Dial\n          disabled={disabled}\n          value={vibratoDepth}\n          onChange={setVibratoDepth} >\n          Wiggle\n          </Dial>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LennySynth);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setFilterFreq, setDelay } from './drummerReducer';\nimport Dial from '../components/util/Dial.jsx';\n\nconst mapStateToProps = state => ({\n  filterFreq: state.drummer.filterFreq,\n  delay: state.drummer.delay,\n  currentCharacter: state.character.character\n});\n\nconst mapDispatchToProps = {\n  setFilterFreq,\n  setDelay\n}\n\nconst Drummer = ({\n  filterFreq,\n  setFilterFreq,\n  delay,\n  setDelay,\n  currentCharacter\n}) => {\n  const disabled = currentCharacter !== 'drummer';\n  return (\n    <div className={`drummer-synth synth ${disabled ? '' : 'current'} `}>\n      <div className='knob-row knob-row-horizontal'>\n        <Dial\n          value={filterFreq}\n          onChange={setFilterFreq}\n          disabled={disabled}>\n          Brightness\n        </Dial>\n        <Dial\n          value={delay}\n          onChange={setDelay}\n          disabled={disabled}>\n          Delay\n        </Dial>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Drummer);","import React, { useState, useEffect, useCallback } from 'react';\nimport BassSynth from '../BassSynth/BassSynth.jsx';\nimport PianoRoll from './piano-roll/PianoRoll.jsx';\nimport './App.css';\nimport { octaveNotes } from '../util/notes-util';\nimport { sequencer } from '../index';\nimport { connect } from 'react-redux';\nimport DrumSequencer from './piano-roll/DrumSequencer.jsx';\nimport LennySynth from '../LennySynth/LennySynth';\nimport Drummer from '../Drummer/Drummer';\n\nconst mapStateToProps = state => ({\n  character: state.character.character\n});\n\nconst App = ({ character }) => {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [tonic, setTonic] = useState(octaveNotes[0]);\n  const [scale, setScale] = useState('major');\n\n  const handleTonicChange = useCallback(e => {\n    setTonic(e.target.value);\n  }, [setTonic]);\n\n  const handleScaleChange = useCallback(e => {\n    setScale(e.target.value);\n  }, [setScale]);\n\n  // runs once after first render\n  useEffect(() => {\n    // callback for sequencer\n    sequencer.onTick = step => {\n      setCurrentStep(step);\n    }\n  }, []);\n\n  return (\n    <main>\n      <section id='control-panel'>\n        <h1>Continuum</h1>\n        <select value={tonic} onChange={handleTonicChange}>\n          {\n            octaveNotes.map(note => <option key={note} value={note}>{note}</option>)\n          }\n        </select>\n        <select value={scale} onChange={handleScaleChange}>\n          <option value='Major'>Major</option>\n          <option value='Minor'>Minor</option>\n        </select>\n      </section>\n      <BassSynth />\n      <LennySynth />\n      <Drummer />\n      <section id='sequencer'>\n        <PianoRoll currentStep={currentStep} />\n        <DrumSequencer currentStep={currentStep}/>\n      </section>\n    </main>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(App);","import Tone from 'tone';\n\nexport default class CSynth {\n  name = null;\n  constructor(name) {\n    if (!name) {\n      throw new Error('CSynth constructor requires a name');\n    }\n    this.name = name;\n    this.synth = new Tone.PolySynth(6, Tone.MonoSynth)\n      .chain(\n        new Tone.Limiter(),\n        Tone.Master\n      );\n    this.synth.set({\n      volume: -12,\n      oscillator: {\n        type: 'sawtooth'\n      },\n    });\n  }\n\n  triggerAttack = (frequency) => {\n    this.synth.triggerAttack(frequency);\n  }\n\n  triggerRelease = (frequency) => {\n    this.synth.triggerRelease(frequency);\n  }\n\n  triggerAttackRelease = (notes, length, time) => {\n    this.synth.triggerAttackRelease(notes, length, time);\n  }\n\n  setAmpAttack = (ratio) => {\n    this.synth.set({\n      envelope: {\n        attack: ratio + 0.01\n      }\n    });\n  }\n\n  setAmpDecay = (ratio) => {\n    this.synth.set({\n      envelope: {\n        decay: ratio + 0.01\n      }\n    });\n  }\n\n  setAmpSustain = (ratio) => {\n    this.synth.set({\n      envelope: {\n        sustain: ratio\n      }\n    });\n  }\n\n  setAmpRelease = (ratio) => {\n    this.synth.set({\n      envelope: {\n        release: (ratio * 10) + 0.01\n      }\n    });\n  }\n\n  setFilterAttack = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        attack: (ratio / 5) + 0.01\n      }\n    });\n  }\n\n  setFilterDecay = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        decay: ratio + 0.01\n      }\n    });\n  }\n\n  setFilterSustain = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        sustain: ratio\n      }\n    });\n  }\n\n  setFilterRelease = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        release: (ratio * 100) + 0.01\n      }\n    });\n  }\n\n  setFilterBase = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        baseFrequency: (ratio * 500) + 1\n      }\n    });\n  }\n\n  setFilterRange = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        octaves: ratio * 20\n      }\n    });\n  }\n\n  setFilterQ = (ratio) => {\n    this.synth.set({\n      filter: {\n        Q: ratio * 10\n      }\n    })\n  }\n}","import Tone from 'tone';\n\nexport default class BassSynthAudio {\n  name = null;\n  constructor(name) {\n    if (!name) {\n      throw new Error('CSynth constructor requires a name');\n    }\n    this.name = name;\n    this.synth = new Tone.PolySynth(1, Tone.MonoSynth)\n      .chain(\n        new Tone.Limiter(),\n        Tone.Master\n      );\n    this.synth.set({\n      volume: -12,\n      detune: -3200,\n      oscillator: {\n        type: 'sawtooth'\n      },\n      envelope: {\n        attack: 0.01,\n        sustain: 1,\n        decay: 0.05\n      },\n      filter: {\n        baseFrequency: 6,\n      },\n      filterEnvelope: {\n        sustain: 0.47415415352178325,\n      }\n    });\n  }\n\n  triggerAttack = (frequency) => {\n    this.synth.triggerAttack(frequency);\n  }\n\n  triggerRelease = (frequency) => {\n    this.synth.triggerRelease(frequency);\n  }\n\n  triggerAttackRelease = (notes, length, time) => {\n    this.synth.triggerAttackRelease(notes, length, time);\n  }\n\n  setLength = ratio => {\n    this.synth.set({\n      envelope: {\n        release: (ratio * 10) + 0.01\n      },\n      filterEnvelope: {\n        release: (ratio * 100) + 0.01\n      }\n    })\n  }\n\n  setShape = ratio => {\n    this.synth.set({\n      filterEnvelope: {\n        attack: (ratio / 5) + 0.01\n      }\n    });\n  }\n\n  setFilterDecay = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        decay: ratio + 0.01\n      }\n    });\n  }\n\n  setFilterRange = (ratio) => {\n    this.synth.set({\n      filterEnvelope: {\n        octaves: ratio * 20\n      }\n    });\n  }\n\n  setFilterQ = (ratio) => {\n    this.synth.set({\n      filter: {\n        Q: ratio * 10\n      }\n    })\n  }\n}","// import store from './store';\nimport watch from 'redux-watch';\nimport { get } from 'object-path';\n\n// use redux-watch to subscribe to a certain store value\n// and use the callback to set the initial value\nconst subscribe = (store, path, callback) => {\n  store.subscribe(watch(store.getState, path)(callback));\n  callback(get(store.getState(), path));\n}\n\nexport function subscribeCSynth(store, synth) {\n  const synthName = synth.name;\n  subscribe(store, `${synthName}.amp.attack`, synth.setAmpAttack);\n  subscribe(store, `${synthName}.amp.decay`, synth.setAmpDecay);\n  subscribe(store, `${synthName}.amp.sustain`, synth.setAmpSustain);\n  subscribe(store, `${synthName}.amp.release`, synth.setAmpRelease);\n\n  subscribe(store, `${synthName}.filter.attack`, synth.setFilterAttack);\n  subscribe(store, `${synthName}.filter.decay`, synth.setFilterDecay);\n  subscribe(store, `${synthName}.filter.sustain`, synth.setFilterSustain);\n  subscribe(store, `${synthName}.filter.release`, synth.setFilterRelease);\n  subscribe(store, `${synthName}.filter.base`, synth.setFilterBase);\n  subscribe(store, `${synthName}.filter.range`, synth.setFilterRange);\n  subscribe(store, `${synthName}.filter.q`, synth.setFilterQ);\n}\n\nexport function subscribeBassSynth(store, synth) {\n  const synthName = synth.name;\n  subscribe(store, `${synthName}.length`, synth.setLength)\n  subscribe(store, `${synthName}.shape`, synth.setShape);\n  subscribe(store, `${synthName}.filter.decay`, synth.setFilterDecay);\n  subscribe(store, `${synthName}.filter.range`, synth.setFilterRange);\n  subscribe(store, `${synthName}.filter.q`, synth.setFilterQ);\n}\n\nexport function subscribeLennySynth(store, synth) {\n  const synthName = synth.name;\n  subscribe(store, `${synthName}.reverb`, synth.setReverb);\n  subscribe(store, `${synthName}.length`, synth.setLength);\n  subscribe(store, `${synthName}.phaser`, synth.setPhaser);\n  subscribe(store, `${synthName}.vibratoDepth`, synth.setVibratoDepth);\n}\n\nexport function subscribeDrummer(store, synth) {\n  const synthName = synth.name;\n  subscribe(store, `${synthName}.filterFreq`, synth.setFilterFreq);\n  subscribe(store, `${synthName}.delay`, synth.setDelay);\n}\n\n\n/**\n * TODO: Remove frequency information from composition and get \n * frequencies from key number so that notes/scales can be changed\n */\n\nexport function subscribeSequencer(store, sequencer) {\n  // subscribe each sequence to it's corresponding composition in the redux store\n  for (const [synthName, sequence] of Object.entries(sequencer.sequences)) {\n    const { composition } = store.getState()[synthName];\n    // subscribe to each cell in the matrix\n    for (const [rowi, row] of composition.entries()) {\n      for (const [coli, cell] of row.entries()) {\n        const path = String.raw`${synthName}.composition.${rowi}.${coli}.active`;\n        subscribe(store, path, active => {\n          const freq = synthName === 'drummer' ? String(cell.keyIndex) : cell.note.frequency;\n          if (active) {\n            sequence.addNote({ index: coli, freq });\n          } else {\n            sequence.removeNote({ index: coli, freq });\n          }\n        });\n      }\n    }\n  }\n}","import { createSlice } from 'redux-starter-kit';\n\nconst utilSlice = createSlice({\n  initialState: {\n    message: 'Hello, World',\n    startTime: null,\n    nextInterval: 0,\n  },\n  reducers: {\n    setMessage(state, action) {\n      console.log('change to ', action.payload);\n      state.message = action.payload;\n    },\n    setStartTime(state, action) {\n      state.startTime = action.payload;\n    },\n    setNextInterval(state, action) {\n      state.nextInterval = action.payload;\n    }\n  }\n});\n\nexport const { setMessage, setStartTime, setNextInterval } = utilSlice.actions;\nexport default utilSlice.reducer;","import { createSlice } from 'redux-starter-kit';\n\nconst characterSlice = createSlice({\n  initialState: {\n    character: null,\n  },\n  reducers: {\n    setCharacter(state, action) {\n      state.character = action.payload.character;\n    }\n  }\n});\n\nexport const { setCharacter } = characterSlice.actions;\nexport default characterSlice.reducer;","import { configureStore, getDefaultMiddleware } from 'redux-starter-kit';\nimport synth1Reducer from './reducers/synth1Reducer';\nimport bassReducer from '../BassSynth/bassReducer';\nimport lennyReducer from '../LennySynth/lennyReducer'\nimport drummerReducer from '../Drummer/drummerReducer';\nimport utilReducer from './reducers/utilReducer';\nimport characterReducer from './reducers/characterReducer';\n\nconst makeStore = (middleware = [], initialState) => {\n  return configureStore({\n    reducer: {\n      synth1: synth1Reducer,\n      bass: bassReducer,\n      lenny: lennyReducer,\n      drummer: drummerReducer,\n      util: utilReducer,\n      character: characterReducer,\n    },\n    middleware: [...getDefaultMiddleware(), ...middleware],\n    ...initialState && { preloadedState: initialState }\n  });\n};\n\nexport default makeStore;","import io from 'socket.io-client';\nimport makeStore from '../redux/store';\nimport { setCharacter } from '../redux/reducers/characterReducer';\nimport { sequencer } from '../index';\n\nconst blackList = [\n  'setCharacter',\n  'setNextInterval'\n]\n\nconst charOverride = process.env.REACT_APP_CHAR;\n\nconst makeActionEmitter = socket => store => next => action => {\n  const result = next(action);\n  if (!(blackList.includes(action.type)) && !action.origin) {\n    socket.emit('action', { ...action, origin: socket.id });\n  }\n  return result;\n}\n\nexport const makeStoreWithSocket = async () => {\n  const socket = io(process.env.REACT_APP_SERVER_URI, { transports: ['websocket'] });\n\n  let character;\n  // wait for initial state from server before creating store\n  const initialState = await new Promise(resolve => {\n    socket.on('init', config => {\n      console.log(config);\n      console.log('You are player ', config.character);\n      character = charOverride ? charOverride : config.character;\n      resolve(config.state);\n    });\n  });\n\n  const actionEmitter = makeActionEmitter(socket);\n  const store = makeStore([actionEmitter], initialState);\n\n  store.dispatch(setCharacter({ character }));\n\n  socket.on('action', action => {\n    store.dispatch(action);\n  });\n\n  socket.on('GET_STATE', (_, cb) => {\n    const { character, ...rest } = store.getState();\n    cb(rest);\n  });\n\n  !charOverride &&\n  socket.on('CHARACTER_CHANGE', ({ charactersById }) => {\n    const character = charactersById[socket.id];\n    store.dispatch(setCharacter({ character }))\n  });\n\n  return store;\n}\n","export default class Sequence {\n\n  chords = []\n  synth = null;\n  frequencyOffset = 0;\n\n  constructor(synth, numSteps) {\n    this.synth = synth;\n    this.chords = new Array(numSteps)\n      .fill(null).map(v => []);\n  }\n\n  getNotes(step) {\n    return this.chords[step] || [];\n    // let chord = this.chords[step] || [];\n    // return chord.map(note => note + this.frequencyOffset * 10);;\n  }\n\n  addNote = ({ index, freq }) => {\n    const chord = this.chords[index];\n    if (!chord.includes(freq)) {\n      chord.push(freq);\n    }\n  }\n\n  removeNote = ({ index, freq }) => {\n    this.chords[index] = this.chords[index].filter(value => value !== freq);\n  }\n\n}","import Tone from 'tone';\nimport Sequence from './Sequence';\n\nexport default class Sequencer {\n\n  step = 0;\n  numSteps = 0;\n  onTick = null;\n  loop = null;\n  sequences = {};\n\n  constructor({ bpm, numSteps }) {\n    this.numSteps = numSteps;\n    Tone.Transport.bpm.value = bpm;\n    Tone.Transport.start('+0.1');\n\n    this.loop = new Tone.Loop(this._loopCallback, '16n');\n    this.loop.humanize = true;\n  }\n\n  _loopCallback = (time) => {\n    // UI callback\n    this._onTick(time, this.step);\n    // trigger notes for each sequence\n    for (const seq of Object.values(this.sequences)) {\n      const nextChord = seq.getNotes(this.step)\n      nextChord.length > 0 &&\n        seq.synth.triggerAttackRelease(nextChord, '16n', time);\n    }\n    this.step++;\n    if (this.step >= this.numSteps) this.step = 0;\n  }\n\n  _onTick(time, step) {\n    if (step === 0 && this.onLoop) {\n      Tone.Draw.schedule(() => {\n        this.onLoop(Date.now());\n      }, time);\n    }\n    if (this.onTick) {\n      Tone.Draw.schedule(() => {\n        this.onTick(step);\n      }, time)\n    }\n  }\n\n  createSequence = (synth) => {\n    this.sequences[synth.name] = new Sequence(synth, this.numSteps);\n  }\n\n  start = () => {\n    Tone.context.resume();\n    this.loop.start();\n  }\n\n  stop = () => {\n    this.loop.stop();\n    this.step = 0;\n  }\n}","\nexport const mapRange = (x, in_min, in_max, out_min, out_max) => {\n  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n}\n\nexport const mapRatioToRange = (x, out_min, out_max) => {\n  const in_min = 0;\n  const in_max = 1;\n  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n}\n\n","import Tone from 'tone';\nimport {mapRange} from '../util/util';\n\nexport default class LennySynthAudio {\n  name = null;\n  constructor(name) {\n    if (!name) {\n      throw new Error('CSynth constructor requires a name');\n    }\n    this.name = name;\n\n    this.reverb = new Tone.Freeverb();\n    this.vibrato = new Tone.Vibrato();\n    this.phaser = new Tone.Phaser({\n      frequency: 0.4,\n      octaves: 2,\n      baseFrequency: 200,\n      Q: 18,\n      stages: 20,\n    });\n    this.phaser.wet.value = 1;\n    this.synth = new Tone.PolySynth(6, Tone.MonoSynth)\n      .chain(\n        this.vibrato,\n        this.reverb,\n        this.phaser,\n        new Tone.Limiter(),\n        Tone.Master\n      );\n    this.synth.set({\n      volume: -12,\n      detune: -1200,\n      oscillator: {\n        type: 'triangle'\n      },\n      filterEnvelope: {\n        attack: 0.01,\n        decay: 1,\n        sustain: 1,\n      },\n      filter: {\n        Q: 0\n      }\n    });\n  }\n\n  triggerAttackRelease = (notes, length, time) => {\n    this.synth.triggerAttackRelease(notes, length, time);\n  }\n\n  setReverb = ratio => {\n    // this.reverb.decay = ratio * 8;\n    // this.reverb.wet.value = mapRange(ratio, 0, 1, 0.0, 0.9);\n    this.reverb.roomSize.value = mapRange(ratio, 0, 1, 0.2, 1);\n  }\n\n  setLength = ratio => {\n    this.synth.set({\n      envelope: {\n        release: (ratio * 8) + 0.01\n      },\n      filterEnvelope: {\n        release: (ratio * 80) + 0.01\n      }\n    });\n  }\n\n  setPhaser = state => {\n    if (state) {\n      this.phaser.wet.value = 1\n    } else {\n      this.phaser.wet.value = 0\n    }\n  }\n\n  setVibratoDepth = ratio => {\n    this.vibrato.depth.value = ratio;\n  }\n}\n","import Tone from 'tone';\n// import { notes } from '../redux/config-creators/compositionReducerConfig';\nimport { mapRatioToRange } from '../util/util'\nimport { clamp } from 'lodash';\n\nexport default class DrummerAudio {\n  constructor(name, files) {\n    this.name = name;\n    // set up audio files\n    this.urls = files.reduce((acc, file) => {\n      acc[file.index] = file.path\n      return acc;\n    }, {})\n    // setup effects\n    this.filter = new Tone.Filter();\n    this.delay = new Tone.FeedbackDelay('8n', 0.5)\n\n    // create sampler\n    this.synth = new Tone.Players(this.urls)\n      .chain(\n        this.filter,\n        this.delay,\n        new Tone.Volume(-8),\n        new Tone.Limiter(),\n        Tone.Master\n      );\n  }\n\n  triggerAttackRelease = (notes, length, time) => {\n    // this.synth.triggerAttackRelease(notes, length, time);\n    notes.forEach(note => {\n      if (!this.urls[note]) return;\n      this.synth.get(note).restart(time);\n      this.synth.get(note).start(time);\n    });\n  }\n\n  setFilterFreq = ratio => {\n    // this.filter\n    this.filter.frequency.value = mapRatioToRange(Math.pow(ratio, 2), 0, 10000);\n  }\n\n  setDelay = ratio => {\n    this.delay.feedback.value = mapRatioToRange(ratio, 0.2, 0.5);\n    this.delay.wet.value = clamp(ratio - 0.2, 0, 1);\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport Tone from 'tone';\nimport { Provider } from 'react-redux';\nimport startAudioContext from 'startaudiocontext';\nimport CSynth from './audio/CSynth';\nimport BassSynthAudio from './BassSynth/BassSynthAudio';\nimport {\n  subscribeCSynth,\n  subscribeBassSynth,\n  subscribeSequencer,\n  subscribeLennySynth,\n  subscribeDrummer\n} from './redux/subscriptions'\nimport { numSteps } from './redux/config-creators/compositionReducerConfig';\nimport { setNextInterval } from './redux/reducers/utilReducer';\nimport { makeStoreWithSocket } from './socket/configureSocket';\nimport Sequencer from './audio/Sequencer';\nimport LennySynthAudio from './LennySynth/LennySynthAudio';\nimport DrummerAudio from './Drummer/DrummerAudio';\n\n\nconst bpm = 85;\nexport const sequencer = new Sequencer({ bpm, numSteps });\nconst oneMinute = 60000\nconst oneBeat = oneMinute / bpm\nconst intervalTime = oneBeat * numSteps;\n\n(async () => {\n\n  // setup web sockets to listen for and emit redux actions\n  // need to wait for initial state before creating the store\n  const store = await makeStoreWithSocket();\n\n  sequencer.onLoop = time => {\n    store.dispatch(setNextInterval(time + intervalTime));\n  }\n\n  const synth1 = new CSynth('synth1');\n  const bass = new BassSynthAudio('bass');\n  const lenny = new LennySynthAudio('lenny');\n  const drummer = new DrummerAudio('drummer', store.getState().drummer.files);\n\n  sequencer.createSequence(synth1);\n  sequencer.createSequence(bass);\n  sequencer.createSequence(lenny);\n  sequencer.createSequence(drummer);\n\n  subscribeCSynth(store, synth1);\n  subscribeBassSynth(store, bass);\n  subscribeLennySynth(store, lenny);\n  subscribeDrummer(store, drummer);\n\n  subscribeSequencer(store, sequencer);\n\n  // click needed to start audio context\n  document.getElementById('start-message').innerHTML = \"Please Click To Continue\"\n\n  // wait for audio context to start before rendering\n  await startAudioContext(Tone.context);\n\n  // find next interval to start at\n  const { nextInterval } = store.getState().util;\n  console.log(nextInterval)\n  if (nextInterval === 0) {\n    sequencer.start();\n  } else {\n    setTimeout(() => {\n      sequencer.start();\n    }, store.getState().util.nextInterval - Date.now())\n  }\n\n  // sequencer.start();\n\n  ReactDOM.render((\n    <Provider store={store}>\n      <App />\n    </Provider>\n  ), document.getElementById('root'));\n\n})();","module.exports = __webpack_public_path__ + \"static/media/kick_02.f5e08c6e.wav\";","module.exports = __webpack_public_path__ + \"static/media/snare_01.16f25651.wav\";","module.exports = __webpack_public_path__ + \"static/media/rim_01.2369df53.wav\";","module.exports = __webpack_public_path__ + \"static/media/shaker_snap_01.689d3025.wav\";","module.exports = __webpack_public_path__ + \"static/media/clap_01.f1089572.wav\";","module.exports = __webpack_public_path__ + \"static/media/short_cymbal_01.b55be721.wav\";","module.exports = __webpack_public_path__ + \"static/media/long_cymbal_01.7a357bf3.wav\";"],"sourceRoot":""}