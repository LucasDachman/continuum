{"ast":null,"code":"import _slicedToArray from \"/Users/lucas/fall-2019/capstone/continuum-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { createSlice } from 'redux-starter-kit';\nconst synth1UISlice = createSlice({\n  initialState: {\n    amp: {\n      attack: 0,\n      decay: 0.5,\n      sustain: 1,\n      release: 0.2\n    },\n    filter: {\n      attack: 0,\n      decay: 0.5,\n      sustain: 1,\n      release: 0.2,\n      base: 0,\n      range: 0.5,\n      q: 0\n    }\n  },\n  reducers: {\n    setAmp(state, action) {\n      // allow for setting arbitrary values\n      for (let _ref of Object.entries(action.payload)) {\n        var _ref2 = _slicedToArray(_ref, 2);\n\n        let key = _ref2[0];\n        let value = _ref2[1];\n        state.amp[key] = value;\n      }\n    },\n\n    setFilter(state, action) {\n      // allow for setting arbitrary values\n      for (let _ref3 of Object.entries(action.payload)) {\n        var _ref4 = _slicedToArray(_ref3, 2);\n\n        let key = _ref4[0];\n        let value = _ref4[1];\n        state.filter[key] = value;\n      }\n    }\n\n  }\n});\nconst _synth1UISlice$action = synth1UISlice.actions,\n      setAmp = _synth1UISlice$action.setAmp,\n      setFilter = _synth1UISlice$action.setFilter;\nexport { setAmp, setFilter };\nexport default synth1UISlice.reducer;","map":{"version":3,"sources":["/Users/lucas/fall-2019/capstone/continuum-app/client/src/redux/reducers/synth1UIReducer.js"],"names":["createSlice","synth1UISlice","initialState","amp","attack","decay","sustain","release","filter","base","range","q","reducers","setAmp","state","action","Object","entries","payload","key","value","setFilter","actions","reducer"],"mappings":";AAAA,SAASA,WAAT,QAA4B,mBAA5B;AAEA,MAAMC,aAAa,GAAGD,WAAW,CAAC;AAChCE,EAAAA,YAAY,EAAE;AACZC,IAAAA,GAAG,EAAE;AACHC,MAAAA,MAAM,EAAE,CADL;AAEHC,MAAAA,KAAK,EAAE,GAFJ;AAGHC,MAAAA,OAAO,EAAE,CAHN;AAIHC,MAAAA,OAAO,EAAE;AAJN,KADO;AAOZC,IAAAA,MAAM,EAAE;AACNJ,MAAAA,MAAM,EAAE,CADF;AAENC,MAAAA,KAAK,EAAE,GAFD;AAGNC,MAAAA,OAAO,EAAE,CAHH;AAINC,MAAAA,OAAO,EAAE,GAJH;AAKNE,MAAAA,IAAI,EAAE,CALA;AAMNC,MAAAA,KAAK,EAAE,GAND;AAONC,MAAAA,CAAC,EAAE;AAPG;AAPI,GADkB;AAkBhCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACpB;AACA,uBAAyBC,MAAM,CAACC,OAAP,CAAeF,MAAM,CAACG,OAAtB,CAAzB,EAAyD;AAAA;;AAAA,YAA/CC,GAA+C;AAAA,YAA1CC,KAA0C;AACvDN,QAAAA,KAAK,CAACX,GAAN,CAAUgB,GAAV,IAAiBC,KAAjB;AACD;AACF,KANO;;AAORC,IAAAA,SAAS,CAACP,KAAD,EAAQC,MAAR,EAAgB;AACvB;AACA,wBAAyBC,MAAM,CAACC,OAAP,CAAeF,MAAM,CAACG,OAAtB,CAAzB,EAAyD;AAAA;;AAAA,YAA/CC,GAA+C;AAAA,YAA1CC,KAA0C;AACvDN,QAAAA,KAAK,CAACN,MAAN,CAAaW,GAAb,IAAoBC,KAApB;AACD;AACF;;AAZO;AAlBsB,CAAD,CAAjC;8BAkCqCnB,aAAa,CAACqB,O;MAApCT,M,yBAAAA,M;MAAQQ,S,yBAAAA,S;;AACvB,eAAepB,aAAa,CAACsB,OAA7B","sourcesContent":["import { createSlice } from 'redux-starter-kit';\n\nconst synth1UISlice = createSlice({\n  initialState: {\n    amp: {\n      attack: 0,\n      decay: 0.5,\n      sustain: 1,\n      release: 0.2\n    },\n    filter: {\n      attack: 0,\n      decay: 0.5,\n      sustain: 1,\n      release: 0.2,\n      base: 0,\n      range: 0.5,\n      q: 0,\n    }\n  },\n  reducers: {\n    setAmp(state, action) {\n      // allow for setting arbitrary values\n      for (let [key, value] of Object.entries(action.payload)) {\n        state.amp[key] = value;\n      }\n    },\n    setFilter(state, action) {\n      // allow for setting arbitrary values\n      for (let [key, value] of Object.entries(action.payload)) {\n        state.filter[key] = value;\n      }\n    }\n  }\n});\n\nexport const { setAmp, setFilter } = synth1UISlice.actions;\nexport default synth1UISlice.reducer;"]},"metadata":{},"sourceType":"module"}